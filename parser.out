Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD
    COLON
    LDQMARK
    PUNTO
    RDQMARK
    SQMARK
    STDIN

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> cuerpo
Rule 2     sentencia -> cuerpo sentencia
Rule 3     sentencia -> declararFuncMultiple
Rule 4     cuerpo -> asignacion
Rule 5     cuerpo -> expresionMat
Rule 6     cuerpo -> expresionComp
Rule 7     cuerpo -> sentenciasConditional
Rule 8     cuerpo -> sentenciasIterativas
Rule 9     cuerpo -> usarFunc
Rule 10    declararFuncMultiple -> declararFunc
Rule 11    declararFuncMultiple -> declararFunc declararFuncMultiple
Rule 12    declararFunc -> declararFuncNoArgs
Rule 13    declararFunc -> declararFuncArgs
Rule 14    declararFuncArgs -> VOID ID LPAREN funcArgumentos RPAREN LBRACE cuerpoBloque RBRACE
Rule 15    funcArgumentos -> argumento
Rule 16    funcArgumentos -> argumento COMMA funcArgumentos
Rule 17    argumento -> asignacionNum
Rule 18    argumento -> asignacionStr
Rule 19    declararFuncNoArgs -> VOID ID LPAREN RPAREN LBRACE cuerpoBloque RBRACE
Rule 20    cuerpoBloque -> cuerpo
Rule 21    cuerpoBloque -> cuerpo cuerpoBloque
Rule 22    usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON
Rule 23    usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON
Rule 24    usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON
Rule 25    sentenciasConditional -> sentenciaif
Rule 26    sentenciasConditional -> sentenciaif anidadaelseif
Rule 27    sentenciasConditional -> sentenciaif sentenciaelse
Rule 28    anidadaelseif -> sentenciaelseif
Rule 29    anidadaelseif -> sentenciaelseif anidadaelseif
Rule 30    anidadaelseif -> sentenciaelseif sentenciaelse
Rule 31    sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
Rule 32    sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
Rule 33    sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE
Rule 34    sentenciasIterativas -> sentenciafor
Rule 35    sentenciasIterativas -> sentenciawhile
Rule 36    incremDecrem -> ID PLUS PLUS
Rule 37    incremDecrem -> ID MINUS MINUS
Rule 38    sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE
Rule 39    sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
Rule 40    asignacion -> asignacionNumerica SEMICOLON
Rule 41    asignacion -> asignacionString SEMICOLON
Rule 42    asignacion -> asignacionBoolean SEMICOLON
Rule 43    asignacion -> asignacionEstructuraDatos SEMICOLON
Rule 44    asignacionEstructuraDatos -> asignacionList
Rule 45    asignacionEstructuraDatos -> asignacionSet
Rule 46    asignacionEstructuraDatos -> asignacionMap
Rule 47    asignacionList -> LIST LESSTHAN tipoPrimitivo MORETHAN ID
Rule 48    asignacionSet -> SET ID ASSIGN NEW SET LPAREN RPAREN
Rule 49    asignacionMap -> MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID
Rule 50    asignacionBoolean -> BOOL ID ASSIGN expresionBoolean
Rule 51    asignacionNumerica -> asignacionNum
Rule 52    asignacionNumerica -> asignacionNumInit
Rule 53    asignacionNum -> tipoNumeric ID
Rule 54    asignacionNumInit -> tipoNumeric ID ASSIGN expresionMat
Rule 55    asignacionNumInit -> ID ASSIGN expresionMat
Rule 56    asignacionString -> asignacionStr
Rule 57    asignacionString -> asignacionStrInit
Rule 58    asignacionStr -> tipoString ID
Rule 59    asignacionStrInit -> tipoString ID ASSIGN expresionString
Rule 60    expresionString -> STRINGVAL
Rule 61    expresionComp -> valor operadoresComp valor
Rule 62    expresionMat -> valor operadoresMat valor
Rule 63    expresionMat -> valor
Rule 64    expresionBoolean -> TRUE
Rule 65    expresionBoolean -> FALSE
Rule 66    operadoresMat -> MINUS
Rule 67    operadoresMat -> PLUS
Rule 68    operadoresMat -> TIMES
Rule 69    operadoresMat -> DIVIDE
Rule 70    operadoresComp -> MORETHAN
Rule 71    operadoresComp -> LESSTHAN
Rule 72    operadoresComp -> GQUAL
Rule 73    operadoresComp -> LQUAL
Rule 74    operadoresComp -> NOTEQUALS
Rule 75    operadoresComp -> EQUALS
Rule 76    valor -> NUMBER
Rule 77    valor -> ID
Rule 78    tipoPrimitivo -> tipoNumeric
Rule 79    tipoPrimitivo -> tipoString
Rule 80    tipoNumeric -> NUM
Rule 81    tipoNumeric -> INT
Rule 82    tipoNumeric -> DOUBLE
Rule 83    tipoString -> STRING
Rule 84    tipoString -> VAR
Rule 85    tipoString -> DYNAMIC

Terminals, with rules where they appear

ADD                  : 
ASSIGN               : 48 50 54 55 59
BOOL                 : 50
COLON                : 
COMMA                : 16 49
DIVIDE               : 69
DOUBLE               : 82
DYNAMIC              : 85
ELSE                 : 32 33
EQUALS               : 75
FALSE                : 65
FOR                  : 38
GQUAL                : 72
ID                   : 14 19 24 36 37 47 48 49 50 53 54 55 58 59 77
IF                   : 31 32
INT                  : 81
LBRACE               : 14 19 31 32 33 38 39
LDQMARK              : 
LESSTHAN             : 47 49 71
LIST                 : 47
LPAREN               : 14 19 22 23 24 31 32 38 39 48
LQUAL                : 73
MAP                  : 49
MINUS                : 37 37 66
MORETHAN             : 47 49 70
NEW                  : 48
NOTEQUALS            : 74
NUM                  : 80
NUMBER               : 23 76
PLUS                 : 36 36 67
PRINT                : 22 23 24
PUNTO                : 
RBRACE               : 14 19 31 32 33 38 39
RDQMARK              : 
RPAREN               : 14 19 22 23 24 31 32 38 39 48
SEMICOLON            : 22 23 24 38 40 41 42 43
SET                  : 48 48
SQMARK               : 
STDIN                : 
STRING               : 83
STRINGVAL            : 22 60
TIMES                : 68
TRUE                 : 64
VAR                  : 84
VOID                 : 14 19
WHILE                : 39
error                : 

Nonterminals, with rules where they appear

anidadaelseif        : 26 29
argumento            : 15 16
asignacion           : 4 38
asignacionBoolean    : 42
asignacionEstructuraDatos : 43
asignacionList       : 44
asignacionMap        : 46
asignacionNum        : 17 51
asignacionNumInit    : 52
asignacionNumerica   : 40
asignacionSet        : 45
asignacionStr        : 18 56
asignacionStrInit    : 57
asignacionString     : 41
cuerpo               : 1 2 20 21
cuerpoBloque         : 14 19 21 31 32 33 38 39
declararFunc         : 10 11
declararFuncArgs     : 13
declararFuncMultiple : 3 11
declararFuncNoArgs   : 12
expresionBoolean     : 50
expresionComp        : 6 31 32 38 39
expresionMat         : 5 54 55
expresionString      : 59
funcArgumentos       : 14 16
incremDecrem         : 38
operadoresComp       : 61
operadoresMat        : 62
sentencia            : 2 0
sentenciaelse        : 27 30
sentenciaelseif      : 28 29 30
sentenciafor         : 34
sentenciaif          : 25 26 27
sentenciasConditional : 7
sentenciasIterativas : 8
sentenciawhile       : 35
tipoNumeric          : 53 54 78
tipoPrimitivo        : 47 49 49
tipoString           : 58 59 79
usarFunc             : 9
valor                : 61 61 62 62 63

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . cuerpo
    (2) sentencia -> . cuerpo sentencia
    (3) sentencia -> . declararFuncMultiple
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . expresionMat
    (6) cuerpo -> . expresionComp
    (7) cuerpo -> . sentenciasConditional
    (8) cuerpo -> . sentenciasIterativas
    (9) cuerpo -> . usarFunc
    (10) declararFuncMultiple -> . declararFunc
    (11) declararFuncMultiple -> . declararFunc declararFuncMultiple
    (40) asignacion -> . asignacionNumerica SEMICOLON
    (41) asignacion -> . asignacionString SEMICOLON
    (42) asignacion -> . asignacionBoolean SEMICOLON
    (43) asignacion -> . asignacionEstructuraDatos SEMICOLON
    (62) expresionMat -> . valor operadoresMat valor
    (63) expresionMat -> . valor
    (61) expresionComp -> . valor operadoresComp valor
    (25) sentenciasConditional -> . sentenciaif
    (26) sentenciasConditional -> . sentenciaif anidadaelseif
    (27) sentenciasConditional -> . sentenciaif sentenciaelse
    (34) sentenciasIterativas -> . sentenciafor
    (35) sentenciasIterativas -> . sentenciawhile
    (22) usarFunc -> . PRINT LPAREN STRINGVAL RPAREN SEMICOLON
    (23) usarFunc -> . PRINT LPAREN NUMBER RPAREN SEMICOLON
    (24) usarFunc -> . PRINT LPAREN ID RPAREN SEMICOLON
    (12) declararFunc -> . declararFuncNoArgs
    (13) declararFunc -> . declararFuncArgs
    (51) asignacionNumerica -> . asignacionNum
    (52) asignacionNumerica -> . asignacionNumInit
    (56) asignacionString -> . asignacionStr
    (57) asignacionString -> . asignacionStrInit
    (50) asignacionBoolean -> . BOOL ID ASSIGN expresionBoolean
    (44) asignacionEstructuraDatos -> . asignacionList
    (45) asignacionEstructuraDatos -> . asignacionSet
    (46) asignacionEstructuraDatos -> . asignacionMap
    (76) valor -> . NUMBER
    (77) valor -> . ID
    (31) sentenciaif -> . IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (38) sentenciafor -> . FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE
    (39) sentenciawhile -> . WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (19) declararFuncNoArgs -> . VOID ID LPAREN RPAREN LBRACE cuerpoBloque RBRACE
    (14) declararFuncArgs -> . VOID ID LPAREN funcArgumentos RPAREN LBRACE cuerpoBloque RBRACE
    (53) asignacionNum -> . tipoNumeric ID
    (54) asignacionNumInit -> . tipoNumeric ID ASSIGN expresionMat
    (55) asignacionNumInit -> . ID ASSIGN expresionMat
    (58) asignacionStr -> . tipoString ID
    (59) asignacionStrInit -> . tipoString ID ASSIGN expresionString
    (47) asignacionList -> . LIST LESSTHAN tipoPrimitivo MORETHAN ID
    (48) asignacionSet -> . SET ID ASSIGN NEW SET LPAREN RPAREN
    (49) asignacionMap -> . MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    PRINT           shift and go to state 19
    BOOL            shift and go to state 28
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    VOID            shift and go to state 35
    LIST            shift and go to state 38
    SET             shift and go to state 39
    MAP             shift and go to state 40
    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    sentencia                      shift and go to state 1
    cuerpo                         shift and go to state 2
    declararFuncMultiple           shift and go to state 3
    asignacion                     shift and go to state 4
    expresionMat                   shift and go to state 5
    expresionComp                  shift and go to state 6
    sentenciasConditional          shift and go to state 7
    sentenciasIterativas           shift and go to state 8
    usarFunc                       shift and go to state 9
    declararFunc                   shift and go to state 10
    asignacionNumerica             shift and go to state 11
    asignacionString               shift and go to state 12
    asignacionBoolean              shift and go to state 13
    asignacionEstructuraDatos      shift and go to state 14
    valor                          shift and go to state 15
    sentenciaif                    shift and go to state 16
    sentenciafor                   shift and go to state 17
    sentenciawhile                 shift and go to state 18
    declararFuncNoArgs             shift and go to state 22
    declararFuncArgs               shift and go to state 23
    asignacionNum                  shift and go to state 24
    asignacionNumInit              shift and go to state 25
    asignacionStr                  shift and go to state 26
    asignacionStrInit              shift and go to state 27
    asignacionList                 shift and go to state 29
    asignacionSet                  shift and go to state 30
    asignacionMap                  shift and go to state 31
    tipoNumeric                    shift and go to state 36
    tipoString                     shift and go to state 37

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> cuerpo .
    (2) sentencia -> cuerpo . sentencia
    (1) sentencia -> . cuerpo
    (2) sentencia -> . cuerpo sentencia
    (3) sentencia -> . declararFuncMultiple
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . expresionMat
    (6) cuerpo -> . expresionComp
    (7) cuerpo -> . sentenciasConditional
    (8) cuerpo -> . sentenciasIterativas
    (9) cuerpo -> . usarFunc
    (10) declararFuncMultiple -> . declararFunc
    (11) declararFuncMultiple -> . declararFunc declararFuncMultiple
    (40) asignacion -> . asignacionNumerica SEMICOLON
    (41) asignacion -> . asignacionString SEMICOLON
    (42) asignacion -> . asignacionBoolean SEMICOLON
    (43) asignacion -> . asignacionEstructuraDatos SEMICOLON
    (62) expresionMat -> . valor operadoresMat valor
    (63) expresionMat -> . valor
    (61) expresionComp -> . valor operadoresComp valor
    (25) sentenciasConditional -> . sentenciaif
    (26) sentenciasConditional -> . sentenciaif anidadaelseif
    (27) sentenciasConditional -> . sentenciaif sentenciaelse
    (34) sentenciasIterativas -> . sentenciafor
    (35) sentenciasIterativas -> . sentenciawhile
    (22) usarFunc -> . PRINT LPAREN STRINGVAL RPAREN SEMICOLON
    (23) usarFunc -> . PRINT LPAREN NUMBER RPAREN SEMICOLON
    (24) usarFunc -> . PRINT LPAREN ID RPAREN SEMICOLON
    (12) declararFunc -> . declararFuncNoArgs
    (13) declararFunc -> . declararFuncArgs
    (51) asignacionNumerica -> . asignacionNum
    (52) asignacionNumerica -> . asignacionNumInit
    (56) asignacionString -> . asignacionStr
    (57) asignacionString -> . asignacionStrInit
    (50) asignacionBoolean -> . BOOL ID ASSIGN expresionBoolean
    (44) asignacionEstructuraDatos -> . asignacionList
    (45) asignacionEstructuraDatos -> . asignacionSet
    (46) asignacionEstructuraDatos -> . asignacionMap
    (76) valor -> . NUMBER
    (77) valor -> . ID
    (31) sentenciaif -> . IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (38) sentenciafor -> . FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE
    (39) sentenciawhile -> . WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (19) declararFuncNoArgs -> . VOID ID LPAREN RPAREN LBRACE cuerpoBloque RBRACE
    (14) declararFuncArgs -> . VOID ID LPAREN funcArgumentos RPAREN LBRACE cuerpoBloque RBRACE
    (53) asignacionNum -> . tipoNumeric ID
    (54) asignacionNumInit -> . tipoNumeric ID ASSIGN expresionMat
    (55) asignacionNumInit -> . ID ASSIGN expresionMat
    (58) asignacionStr -> . tipoString ID
    (59) asignacionStrInit -> . tipoString ID ASSIGN expresionString
    (47) asignacionList -> . LIST LESSTHAN tipoPrimitivo MORETHAN ID
    (48) asignacionSet -> . SET ID ASSIGN NEW SET LPAREN RPAREN
    (49) asignacionMap -> . MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    $end            reduce using rule 1 (sentencia -> cuerpo .)
    PRINT           shift and go to state 19
    BOOL            shift and go to state 28
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    VOID            shift and go to state 35
    LIST            shift and go to state 38
    SET             shift and go to state 39
    MAP             shift and go to state 40
    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    cuerpo                         shift and go to state 2
    sentencia                      shift and go to state 47
    declararFuncMultiple           shift and go to state 3
    asignacion                     shift and go to state 4
    expresionMat                   shift and go to state 5
    expresionComp                  shift and go to state 6
    sentenciasConditional          shift and go to state 7
    sentenciasIterativas           shift and go to state 8
    usarFunc                       shift and go to state 9
    declararFunc                   shift and go to state 10
    asignacionNumerica             shift and go to state 11
    asignacionString               shift and go to state 12
    asignacionBoolean              shift and go to state 13
    asignacionEstructuraDatos      shift and go to state 14
    valor                          shift and go to state 15
    sentenciaif                    shift and go to state 16
    sentenciafor                   shift and go to state 17
    sentenciawhile                 shift and go to state 18
    declararFuncNoArgs             shift and go to state 22
    declararFuncArgs               shift and go to state 23
    asignacionNum                  shift and go to state 24
    asignacionNumInit              shift and go to state 25
    asignacionStr                  shift and go to state 26
    asignacionStrInit              shift and go to state 27
    asignacionList                 shift and go to state 29
    asignacionSet                  shift and go to state 30
    asignacionMap                  shift and go to state 31
    tipoNumeric                    shift and go to state 36
    tipoString                     shift and go to state 37

state 3

    (3) sentencia -> declararFuncMultiple .

    $end            reduce using rule 3 (sentencia -> declararFuncMultiple .)


state 4

    (4) cuerpo -> asignacion .

    PRINT           reduce using rule 4 (cuerpo -> asignacion .)
    BOOL            reduce using rule 4 (cuerpo -> asignacion .)
    NUMBER          reduce using rule 4 (cuerpo -> asignacion .)
    ID              reduce using rule 4 (cuerpo -> asignacion .)
    IF              reduce using rule 4 (cuerpo -> asignacion .)
    FOR             reduce using rule 4 (cuerpo -> asignacion .)
    WHILE           reduce using rule 4 (cuerpo -> asignacion .)
    VOID            reduce using rule 4 (cuerpo -> asignacion .)
    LIST            reduce using rule 4 (cuerpo -> asignacion .)
    SET             reduce using rule 4 (cuerpo -> asignacion .)
    MAP             reduce using rule 4 (cuerpo -> asignacion .)
    NUM             reduce using rule 4 (cuerpo -> asignacion .)
    INT             reduce using rule 4 (cuerpo -> asignacion .)
    DOUBLE          reduce using rule 4 (cuerpo -> asignacion .)
    STRING          reduce using rule 4 (cuerpo -> asignacion .)
    VAR             reduce using rule 4 (cuerpo -> asignacion .)
    DYNAMIC         reduce using rule 4 (cuerpo -> asignacion .)
    $end            reduce using rule 4 (cuerpo -> asignacion .)
    RBRACE          reduce using rule 4 (cuerpo -> asignacion .)


state 5

    (5) cuerpo -> expresionMat .

    PRINT           reduce using rule 5 (cuerpo -> expresionMat .)
    BOOL            reduce using rule 5 (cuerpo -> expresionMat .)
    NUMBER          reduce using rule 5 (cuerpo -> expresionMat .)
    ID              reduce using rule 5 (cuerpo -> expresionMat .)
    IF              reduce using rule 5 (cuerpo -> expresionMat .)
    FOR             reduce using rule 5 (cuerpo -> expresionMat .)
    WHILE           reduce using rule 5 (cuerpo -> expresionMat .)
    VOID            reduce using rule 5 (cuerpo -> expresionMat .)
    LIST            reduce using rule 5 (cuerpo -> expresionMat .)
    SET             reduce using rule 5 (cuerpo -> expresionMat .)
    MAP             reduce using rule 5 (cuerpo -> expresionMat .)
    NUM             reduce using rule 5 (cuerpo -> expresionMat .)
    INT             reduce using rule 5 (cuerpo -> expresionMat .)
    DOUBLE          reduce using rule 5 (cuerpo -> expresionMat .)
    STRING          reduce using rule 5 (cuerpo -> expresionMat .)
    VAR             reduce using rule 5 (cuerpo -> expresionMat .)
    DYNAMIC         reduce using rule 5 (cuerpo -> expresionMat .)
    $end            reduce using rule 5 (cuerpo -> expresionMat .)
    RBRACE          reduce using rule 5 (cuerpo -> expresionMat .)


state 6

    (6) cuerpo -> expresionComp .

    PRINT           reduce using rule 6 (cuerpo -> expresionComp .)
    BOOL            reduce using rule 6 (cuerpo -> expresionComp .)
    NUMBER          reduce using rule 6 (cuerpo -> expresionComp .)
    ID              reduce using rule 6 (cuerpo -> expresionComp .)
    IF              reduce using rule 6 (cuerpo -> expresionComp .)
    FOR             reduce using rule 6 (cuerpo -> expresionComp .)
    WHILE           reduce using rule 6 (cuerpo -> expresionComp .)
    VOID            reduce using rule 6 (cuerpo -> expresionComp .)
    LIST            reduce using rule 6 (cuerpo -> expresionComp .)
    SET             reduce using rule 6 (cuerpo -> expresionComp .)
    MAP             reduce using rule 6 (cuerpo -> expresionComp .)
    NUM             reduce using rule 6 (cuerpo -> expresionComp .)
    INT             reduce using rule 6 (cuerpo -> expresionComp .)
    DOUBLE          reduce using rule 6 (cuerpo -> expresionComp .)
    STRING          reduce using rule 6 (cuerpo -> expresionComp .)
    VAR             reduce using rule 6 (cuerpo -> expresionComp .)
    DYNAMIC         reduce using rule 6 (cuerpo -> expresionComp .)
    $end            reduce using rule 6 (cuerpo -> expresionComp .)
    RBRACE          reduce using rule 6 (cuerpo -> expresionComp .)


state 7

    (7) cuerpo -> sentenciasConditional .

    PRINT           reduce using rule 7 (cuerpo -> sentenciasConditional .)
    BOOL            reduce using rule 7 (cuerpo -> sentenciasConditional .)
    NUMBER          reduce using rule 7 (cuerpo -> sentenciasConditional .)
    ID              reduce using rule 7 (cuerpo -> sentenciasConditional .)
    IF              reduce using rule 7 (cuerpo -> sentenciasConditional .)
    FOR             reduce using rule 7 (cuerpo -> sentenciasConditional .)
    WHILE           reduce using rule 7 (cuerpo -> sentenciasConditional .)
    VOID            reduce using rule 7 (cuerpo -> sentenciasConditional .)
    LIST            reduce using rule 7 (cuerpo -> sentenciasConditional .)
    SET             reduce using rule 7 (cuerpo -> sentenciasConditional .)
    MAP             reduce using rule 7 (cuerpo -> sentenciasConditional .)
    NUM             reduce using rule 7 (cuerpo -> sentenciasConditional .)
    INT             reduce using rule 7 (cuerpo -> sentenciasConditional .)
    DOUBLE          reduce using rule 7 (cuerpo -> sentenciasConditional .)
    STRING          reduce using rule 7 (cuerpo -> sentenciasConditional .)
    VAR             reduce using rule 7 (cuerpo -> sentenciasConditional .)
    DYNAMIC         reduce using rule 7 (cuerpo -> sentenciasConditional .)
    $end            reduce using rule 7 (cuerpo -> sentenciasConditional .)
    RBRACE          reduce using rule 7 (cuerpo -> sentenciasConditional .)


state 8

    (8) cuerpo -> sentenciasIterativas .

    PRINT           reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    BOOL            reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    NUMBER          reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    ID              reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    IF              reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    FOR             reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    WHILE           reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    VOID            reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    LIST            reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    SET             reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    MAP             reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    NUM             reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    INT             reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    DOUBLE          reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    STRING          reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    VAR             reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    DYNAMIC         reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    $end            reduce using rule 8 (cuerpo -> sentenciasIterativas .)
    RBRACE          reduce using rule 8 (cuerpo -> sentenciasIterativas .)


state 9

    (9) cuerpo -> usarFunc .

    PRINT           reduce using rule 9 (cuerpo -> usarFunc .)
    BOOL            reduce using rule 9 (cuerpo -> usarFunc .)
    NUMBER          reduce using rule 9 (cuerpo -> usarFunc .)
    ID              reduce using rule 9 (cuerpo -> usarFunc .)
    IF              reduce using rule 9 (cuerpo -> usarFunc .)
    FOR             reduce using rule 9 (cuerpo -> usarFunc .)
    WHILE           reduce using rule 9 (cuerpo -> usarFunc .)
    VOID            reduce using rule 9 (cuerpo -> usarFunc .)
    LIST            reduce using rule 9 (cuerpo -> usarFunc .)
    SET             reduce using rule 9 (cuerpo -> usarFunc .)
    MAP             reduce using rule 9 (cuerpo -> usarFunc .)
    NUM             reduce using rule 9 (cuerpo -> usarFunc .)
    INT             reduce using rule 9 (cuerpo -> usarFunc .)
    DOUBLE          reduce using rule 9 (cuerpo -> usarFunc .)
    STRING          reduce using rule 9 (cuerpo -> usarFunc .)
    VAR             reduce using rule 9 (cuerpo -> usarFunc .)
    DYNAMIC         reduce using rule 9 (cuerpo -> usarFunc .)
    $end            reduce using rule 9 (cuerpo -> usarFunc .)
    RBRACE          reduce using rule 9 (cuerpo -> usarFunc .)


state 10

    (10) declararFuncMultiple -> declararFunc .
    (11) declararFuncMultiple -> declararFunc . declararFuncMultiple
    (10) declararFuncMultiple -> . declararFunc
    (11) declararFuncMultiple -> . declararFunc declararFuncMultiple
    (12) declararFunc -> . declararFuncNoArgs
    (13) declararFunc -> . declararFuncArgs
    (19) declararFuncNoArgs -> . VOID ID LPAREN RPAREN LBRACE cuerpoBloque RBRACE
    (14) declararFuncArgs -> . VOID ID LPAREN funcArgumentos RPAREN LBRACE cuerpoBloque RBRACE

    $end            reduce using rule 10 (declararFuncMultiple -> declararFunc .)
    VOID            shift and go to state 35

    declararFunc                   shift and go to state 10
    declararFuncMultiple           shift and go to state 48
    declararFuncNoArgs             shift and go to state 22
    declararFuncArgs               shift and go to state 23

state 11

    (40) asignacion -> asignacionNumerica . SEMICOLON

    SEMICOLON       shift and go to state 49


state 12

    (41) asignacion -> asignacionString . SEMICOLON

    SEMICOLON       shift and go to state 50


state 13

    (42) asignacion -> asignacionBoolean . SEMICOLON

    SEMICOLON       shift and go to state 51


state 14

    (43) asignacion -> asignacionEstructuraDatos . SEMICOLON

    SEMICOLON       shift and go to state 52


state 15

    (62) expresionMat -> valor . operadoresMat valor
    (63) expresionMat -> valor .
    (61) expresionComp -> valor . operadoresComp valor
    (66) operadoresMat -> . MINUS
    (67) operadoresMat -> . PLUS
    (68) operadoresMat -> . TIMES
    (69) operadoresMat -> . DIVIDE
    (70) operadoresComp -> . MORETHAN
    (71) operadoresComp -> . LESSTHAN
    (72) operadoresComp -> . GQUAL
    (73) operadoresComp -> . LQUAL
    (74) operadoresComp -> . NOTEQUALS
    (75) operadoresComp -> . EQUALS

    PRINT           reduce using rule 63 (expresionMat -> valor .)
    BOOL            reduce using rule 63 (expresionMat -> valor .)
    NUMBER          reduce using rule 63 (expresionMat -> valor .)
    ID              reduce using rule 63 (expresionMat -> valor .)
    IF              reduce using rule 63 (expresionMat -> valor .)
    FOR             reduce using rule 63 (expresionMat -> valor .)
    WHILE           reduce using rule 63 (expresionMat -> valor .)
    VOID            reduce using rule 63 (expresionMat -> valor .)
    LIST            reduce using rule 63 (expresionMat -> valor .)
    SET             reduce using rule 63 (expresionMat -> valor .)
    MAP             reduce using rule 63 (expresionMat -> valor .)
    NUM             reduce using rule 63 (expresionMat -> valor .)
    INT             reduce using rule 63 (expresionMat -> valor .)
    DOUBLE          reduce using rule 63 (expresionMat -> valor .)
    STRING          reduce using rule 63 (expresionMat -> valor .)
    VAR             reduce using rule 63 (expresionMat -> valor .)
    DYNAMIC         reduce using rule 63 (expresionMat -> valor .)
    $end            reduce using rule 63 (expresionMat -> valor .)
    RBRACE          reduce using rule 63 (expresionMat -> valor .)
    MINUS           shift and go to state 55
    PLUS            shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MORETHAN        shift and go to state 59
    LESSTHAN        shift and go to state 60
    GQUAL           shift and go to state 61
    LQUAL           shift and go to state 62
    NOTEQUALS       shift and go to state 63
    EQUALS          shift and go to state 64

    operadoresMat                  shift and go to state 53
    operadoresComp                 shift and go to state 54

state 16

    (25) sentenciasConditional -> sentenciaif .
    (26) sentenciasConditional -> sentenciaif . anidadaelseif
    (27) sentenciasConditional -> sentenciaif . sentenciaelse
    (28) anidadaelseif -> . sentenciaelseif
    (29) anidadaelseif -> . sentenciaelseif anidadaelseif
    (30) anidadaelseif -> . sentenciaelseif sentenciaelse
    (33) sentenciaelse -> . ELSE LBRACE cuerpoBloque RBRACE
    (32) sentenciaelseif -> . ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE

    PRINT           reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    BOOL            reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    NUMBER          reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    ID              reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    IF              reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    FOR             reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    WHILE           reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    VOID            reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    LIST            reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    SET             reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    MAP             reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    NUM             reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    INT             reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    DOUBLE          reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    STRING          reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    VAR             reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    DYNAMIC         reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    $end            reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    RBRACE          reduce using rule 25 (sentenciasConditional -> sentenciaif .)
    ELSE            shift and go to state 68

    anidadaelseif                  shift and go to state 65
    sentenciaelse                  shift and go to state 66
    sentenciaelseif                shift and go to state 67

state 17

    (34) sentenciasIterativas -> sentenciafor .

    PRINT           reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    BOOL            reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    NUMBER          reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    ID              reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    IF              reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    FOR             reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    WHILE           reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    VOID            reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    LIST            reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    SET             reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    MAP             reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    NUM             reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    INT             reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    DOUBLE          reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    STRING          reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    VAR             reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    DYNAMIC         reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    $end            reduce using rule 34 (sentenciasIterativas -> sentenciafor .)
    RBRACE          reduce using rule 34 (sentenciasIterativas -> sentenciafor .)


state 18

    (35) sentenciasIterativas -> sentenciawhile .

    PRINT           reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    BOOL            reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    NUMBER          reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    ID              reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    IF              reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    FOR             reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    WHILE           reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    VOID            reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    LIST            reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    SET             reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    MAP             reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    NUM             reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    INT             reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    DOUBLE          reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    STRING          reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    VAR             reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    DYNAMIC         reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    $end            reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)
    RBRACE          reduce using rule 35 (sentenciasIterativas -> sentenciawhile .)


state 19

    (22) usarFunc -> PRINT . LPAREN STRINGVAL RPAREN SEMICOLON
    (23) usarFunc -> PRINT . LPAREN NUMBER RPAREN SEMICOLON
    (24) usarFunc -> PRINT . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 69


state 20

    (76) valor -> NUMBER .

    MINUS           reduce using rule 76 (valor -> NUMBER .)
    PLUS            reduce using rule 76 (valor -> NUMBER .)
    TIMES           reduce using rule 76 (valor -> NUMBER .)
    DIVIDE          reduce using rule 76 (valor -> NUMBER .)
    MORETHAN        reduce using rule 76 (valor -> NUMBER .)
    LESSTHAN        reduce using rule 76 (valor -> NUMBER .)
    GQUAL           reduce using rule 76 (valor -> NUMBER .)
    LQUAL           reduce using rule 76 (valor -> NUMBER .)
    NOTEQUALS       reduce using rule 76 (valor -> NUMBER .)
    EQUALS          reduce using rule 76 (valor -> NUMBER .)
    PRINT           reduce using rule 76 (valor -> NUMBER .)
    BOOL            reduce using rule 76 (valor -> NUMBER .)
    NUMBER          reduce using rule 76 (valor -> NUMBER .)
    ID              reduce using rule 76 (valor -> NUMBER .)
    IF              reduce using rule 76 (valor -> NUMBER .)
    FOR             reduce using rule 76 (valor -> NUMBER .)
    WHILE           reduce using rule 76 (valor -> NUMBER .)
    VOID            reduce using rule 76 (valor -> NUMBER .)
    LIST            reduce using rule 76 (valor -> NUMBER .)
    SET             reduce using rule 76 (valor -> NUMBER .)
    MAP             reduce using rule 76 (valor -> NUMBER .)
    NUM             reduce using rule 76 (valor -> NUMBER .)
    INT             reduce using rule 76 (valor -> NUMBER .)
    DOUBLE          reduce using rule 76 (valor -> NUMBER .)
    STRING          reduce using rule 76 (valor -> NUMBER .)
    VAR             reduce using rule 76 (valor -> NUMBER .)
    DYNAMIC         reduce using rule 76 (valor -> NUMBER .)
    $end            reduce using rule 76 (valor -> NUMBER .)
    SEMICOLON       reduce using rule 76 (valor -> NUMBER .)
    RBRACE          reduce using rule 76 (valor -> NUMBER .)
    RPAREN          reduce using rule 76 (valor -> NUMBER .)


state 21

    (77) valor -> ID .
    (55) asignacionNumInit -> ID . ASSIGN expresionMat

    MINUS           reduce using rule 77 (valor -> ID .)
    PLUS            reduce using rule 77 (valor -> ID .)
    TIMES           reduce using rule 77 (valor -> ID .)
    DIVIDE          reduce using rule 77 (valor -> ID .)
    MORETHAN        reduce using rule 77 (valor -> ID .)
    LESSTHAN        reduce using rule 77 (valor -> ID .)
    GQUAL           reduce using rule 77 (valor -> ID .)
    LQUAL           reduce using rule 77 (valor -> ID .)
    NOTEQUALS       reduce using rule 77 (valor -> ID .)
    EQUALS          reduce using rule 77 (valor -> ID .)
    PRINT           reduce using rule 77 (valor -> ID .)
    BOOL            reduce using rule 77 (valor -> ID .)
    NUMBER          reduce using rule 77 (valor -> ID .)
    ID              reduce using rule 77 (valor -> ID .)
    IF              reduce using rule 77 (valor -> ID .)
    FOR             reduce using rule 77 (valor -> ID .)
    WHILE           reduce using rule 77 (valor -> ID .)
    VOID            reduce using rule 77 (valor -> ID .)
    LIST            reduce using rule 77 (valor -> ID .)
    SET             reduce using rule 77 (valor -> ID .)
    MAP             reduce using rule 77 (valor -> ID .)
    NUM             reduce using rule 77 (valor -> ID .)
    INT             reduce using rule 77 (valor -> ID .)
    DOUBLE          reduce using rule 77 (valor -> ID .)
    STRING          reduce using rule 77 (valor -> ID .)
    VAR             reduce using rule 77 (valor -> ID .)
    DYNAMIC         reduce using rule 77 (valor -> ID .)
    $end            reduce using rule 77 (valor -> ID .)
    RBRACE          reduce using rule 77 (valor -> ID .)
    ASSIGN          shift and go to state 70


state 22

    (12) declararFunc -> declararFuncNoArgs .

    VOID            reduce using rule 12 (declararFunc -> declararFuncNoArgs .)
    $end            reduce using rule 12 (declararFunc -> declararFuncNoArgs .)


state 23

    (13) declararFunc -> declararFuncArgs .

    VOID            reduce using rule 13 (declararFunc -> declararFuncArgs .)
    $end            reduce using rule 13 (declararFunc -> declararFuncArgs .)


state 24

    (51) asignacionNumerica -> asignacionNum .

    SEMICOLON       reduce using rule 51 (asignacionNumerica -> asignacionNum .)


state 25

    (52) asignacionNumerica -> asignacionNumInit .

    SEMICOLON       reduce using rule 52 (asignacionNumerica -> asignacionNumInit .)


state 26

    (56) asignacionString -> asignacionStr .

    SEMICOLON       reduce using rule 56 (asignacionString -> asignacionStr .)


state 27

    (57) asignacionString -> asignacionStrInit .

    SEMICOLON       reduce using rule 57 (asignacionString -> asignacionStrInit .)


state 28

    (50) asignacionBoolean -> BOOL . ID ASSIGN expresionBoolean

    ID              shift and go to state 71


state 29

    (44) asignacionEstructuraDatos -> asignacionList .

    SEMICOLON       reduce using rule 44 (asignacionEstructuraDatos -> asignacionList .)


state 30

    (45) asignacionEstructuraDatos -> asignacionSet .

    SEMICOLON       reduce using rule 45 (asignacionEstructuraDatos -> asignacionSet .)


state 31

    (46) asignacionEstructuraDatos -> asignacionMap .

    SEMICOLON       reduce using rule 46 (asignacionEstructuraDatos -> asignacionMap .)


state 32

    (31) sentenciaif -> IF . LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE

    LPAREN          shift and go to state 72


state 33

    (38) sentenciafor -> FOR . LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE

    LPAREN          shift and go to state 73


state 34

    (39) sentenciawhile -> WHILE . LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE

    LPAREN          shift and go to state 74


state 35

    (19) declararFuncNoArgs -> VOID . ID LPAREN RPAREN LBRACE cuerpoBloque RBRACE
    (14) declararFuncArgs -> VOID . ID LPAREN funcArgumentos RPAREN LBRACE cuerpoBloque RBRACE

    ID              shift and go to state 75


state 36

    (53) asignacionNum -> tipoNumeric . ID
    (54) asignacionNumInit -> tipoNumeric . ID ASSIGN expresionMat

    ID              shift and go to state 76


state 37

    (58) asignacionStr -> tipoString . ID
    (59) asignacionStrInit -> tipoString . ID ASSIGN expresionString

    ID              shift and go to state 77


state 38

    (47) asignacionList -> LIST . LESSTHAN tipoPrimitivo MORETHAN ID

    LESSTHAN        shift and go to state 78


state 39

    (48) asignacionSet -> SET . ID ASSIGN NEW SET LPAREN RPAREN

    ID              shift and go to state 79


state 40

    (49) asignacionMap -> MAP . LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID

    LESSTHAN        shift and go to state 80


state 41

    (80) tipoNumeric -> NUM .

    ID              reduce using rule 80 (tipoNumeric -> NUM .)
    MORETHAN        reduce using rule 80 (tipoNumeric -> NUM .)
    COMMA           reduce using rule 80 (tipoNumeric -> NUM .)


state 42

    (81) tipoNumeric -> INT .

    ID              reduce using rule 81 (tipoNumeric -> INT .)
    MORETHAN        reduce using rule 81 (tipoNumeric -> INT .)
    COMMA           reduce using rule 81 (tipoNumeric -> INT .)


state 43

    (82) tipoNumeric -> DOUBLE .

    ID              reduce using rule 82 (tipoNumeric -> DOUBLE .)
    MORETHAN        reduce using rule 82 (tipoNumeric -> DOUBLE .)
    COMMA           reduce using rule 82 (tipoNumeric -> DOUBLE .)


state 44

    (83) tipoString -> STRING .

    ID              reduce using rule 83 (tipoString -> STRING .)
    MORETHAN        reduce using rule 83 (tipoString -> STRING .)
    COMMA           reduce using rule 83 (tipoString -> STRING .)


state 45

    (84) tipoString -> VAR .

    ID              reduce using rule 84 (tipoString -> VAR .)
    MORETHAN        reduce using rule 84 (tipoString -> VAR .)
    COMMA           reduce using rule 84 (tipoString -> VAR .)


state 46

    (85) tipoString -> DYNAMIC .

    ID              reduce using rule 85 (tipoString -> DYNAMIC .)
    MORETHAN        reduce using rule 85 (tipoString -> DYNAMIC .)
    COMMA           reduce using rule 85 (tipoString -> DYNAMIC .)


state 47

    (2) sentencia -> cuerpo sentencia .

    $end            reduce using rule 2 (sentencia -> cuerpo sentencia .)


state 48

    (11) declararFuncMultiple -> declararFunc declararFuncMultiple .

    $end            reduce using rule 11 (declararFuncMultiple -> declararFunc declararFuncMultiple .)


state 49

    (40) asignacion -> asignacionNumerica SEMICOLON .

    PRINT           reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    BOOL            reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    NUMBER          reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    ID              reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    IF              reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    FOR             reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    WHILE           reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    VOID            reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    LIST            reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    SET             reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    MAP             reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    NUM             reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    INT             reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    DOUBLE          reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    STRING          reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    VAR             reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    DYNAMIC         reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    $end            reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)
    RBRACE          reduce using rule 40 (asignacion -> asignacionNumerica SEMICOLON .)


state 50

    (41) asignacion -> asignacionString SEMICOLON .

    PRINT           reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    BOOL            reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    NUMBER          reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    ID              reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    IF              reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    FOR             reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    WHILE           reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    VOID            reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    LIST            reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    SET             reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    MAP             reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    NUM             reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    INT             reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    DOUBLE          reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    STRING          reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    VAR             reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    DYNAMIC         reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    $end            reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)
    RBRACE          reduce using rule 41 (asignacion -> asignacionString SEMICOLON .)


state 51

    (42) asignacion -> asignacionBoolean SEMICOLON .

    PRINT           reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    BOOL            reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    NUMBER          reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    ID              reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    IF              reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    FOR             reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    WHILE           reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    VOID            reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    LIST            reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    SET             reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    MAP             reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    NUM             reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    INT             reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    DOUBLE          reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    STRING          reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    VAR             reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    DYNAMIC         reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    $end            reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)
    RBRACE          reduce using rule 42 (asignacion -> asignacionBoolean SEMICOLON .)


state 52

    (43) asignacion -> asignacionEstructuraDatos SEMICOLON .

    PRINT           reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    BOOL            reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    NUMBER          reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    ID              reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    IF              reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    FOR             reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    WHILE           reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    VOID            reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    LIST            reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    SET             reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    MAP             reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    NUM             reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    INT             reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    DOUBLE          reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    STRING          reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    VAR             reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    DYNAMIC         reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    $end            reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)
    RBRACE          reduce using rule 43 (asignacion -> asignacionEstructuraDatos SEMICOLON .)


state 53

    (62) expresionMat -> valor operadoresMat . valor
    (76) valor -> . NUMBER
    (77) valor -> . ID

    NUMBER          shift and go to state 20
    ID              shift and go to state 82

    valor                          shift and go to state 81

state 54

    (61) expresionComp -> valor operadoresComp . valor
    (76) valor -> . NUMBER
    (77) valor -> . ID

    NUMBER          shift and go to state 20
    ID              shift and go to state 82

    valor                          shift and go to state 83

state 55

    (66) operadoresMat -> MINUS .

    NUMBER          reduce using rule 66 (operadoresMat -> MINUS .)
    ID              reduce using rule 66 (operadoresMat -> MINUS .)


state 56

    (67) operadoresMat -> PLUS .

    NUMBER          reduce using rule 67 (operadoresMat -> PLUS .)
    ID              reduce using rule 67 (operadoresMat -> PLUS .)


state 57

    (68) operadoresMat -> TIMES .

    NUMBER          reduce using rule 68 (operadoresMat -> TIMES .)
    ID              reduce using rule 68 (operadoresMat -> TIMES .)


state 58

    (69) operadoresMat -> DIVIDE .

    NUMBER          reduce using rule 69 (operadoresMat -> DIVIDE .)
    ID              reduce using rule 69 (operadoresMat -> DIVIDE .)


state 59

    (70) operadoresComp -> MORETHAN .

    NUMBER          reduce using rule 70 (operadoresComp -> MORETHAN .)
    ID              reduce using rule 70 (operadoresComp -> MORETHAN .)


state 60

    (71) operadoresComp -> LESSTHAN .

    NUMBER          reduce using rule 71 (operadoresComp -> LESSTHAN .)
    ID              reduce using rule 71 (operadoresComp -> LESSTHAN .)


state 61

    (72) operadoresComp -> GQUAL .

    NUMBER          reduce using rule 72 (operadoresComp -> GQUAL .)
    ID              reduce using rule 72 (operadoresComp -> GQUAL .)


state 62

    (73) operadoresComp -> LQUAL .

    NUMBER          reduce using rule 73 (operadoresComp -> LQUAL .)
    ID              reduce using rule 73 (operadoresComp -> LQUAL .)


state 63

    (74) operadoresComp -> NOTEQUALS .

    NUMBER          reduce using rule 74 (operadoresComp -> NOTEQUALS .)
    ID              reduce using rule 74 (operadoresComp -> NOTEQUALS .)


state 64

    (75) operadoresComp -> EQUALS .

    NUMBER          reduce using rule 75 (operadoresComp -> EQUALS .)
    ID              reduce using rule 75 (operadoresComp -> EQUALS .)


state 65

    (26) sentenciasConditional -> sentenciaif anidadaelseif .

    PRINT           reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    BOOL            reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    NUMBER          reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    ID              reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    IF              reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    FOR             reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    WHILE           reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    VOID            reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    LIST            reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    SET             reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    MAP             reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    NUM             reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    INT             reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    DOUBLE          reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    STRING          reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    VAR             reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    DYNAMIC         reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    $end            reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)
    RBRACE          reduce using rule 26 (sentenciasConditional -> sentenciaif anidadaelseif .)


state 66

    (27) sentenciasConditional -> sentenciaif sentenciaelse .

    PRINT           reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    BOOL            reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    NUMBER          reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    ID              reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    IF              reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    FOR             reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    WHILE           reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    VOID            reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    LIST            reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    SET             reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    MAP             reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    NUM             reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    INT             reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    DOUBLE          reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    STRING          reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    VAR             reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    DYNAMIC         reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    $end            reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)
    RBRACE          reduce using rule 27 (sentenciasConditional -> sentenciaif sentenciaelse .)


state 67

    (28) anidadaelseif -> sentenciaelseif .
    (29) anidadaelseif -> sentenciaelseif . anidadaelseif
    (30) anidadaelseif -> sentenciaelseif . sentenciaelse
    (28) anidadaelseif -> . sentenciaelseif
    (29) anidadaelseif -> . sentenciaelseif anidadaelseif
    (30) anidadaelseif -> . sentenciaelseif sentenciaelse
    (33) sentenciaelse -> . ELSE LBRACE cuerpoBloque RBRACE
    (32) sentenciaelseif -> . ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE

    PRINT           reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    BOOL            reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    NUMBER          reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    ID              reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    IF              reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    FOR             reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    WHILE           reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    VOID            reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    LIST            reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    SET             reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    MAP             reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    NUM             reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    INT             reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    DOUBLE          reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    STRING          reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    VAR             reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    DYNAMIC         reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    $end            reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    RBRACE          reduce using rule 28 (anidadaelseif -> sentenciaelseif .)
    ELSE            shift and go to state 68

    sentenciaelseif                shift and go to state 67
    anidadaelseif                  shift and go to state 84
    sentenciaelse                  shift and go to state 85

state 68

    (33) sentenciaelse -> ELSE . LBRACE cuerpoBloque RBRACE
    (32) sentenciaelseif -> ELSE . IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE

    LBRACE          shift and go to state 86
    IF              shift and go to state 87


state 69

    (22) usarFunc -> PRINT LPAREN . STRINGVAL RPAREN SEMICOLON
    (23) usarFunc -> PRINT LPAREN . NUMBER RPAREN SEMICOLON
    (24) usarFunc -> PRINT LPAREN . ID RPAREN SEMICOLON

    STRINGVAL       shift and go to state 88
    NUMBER          shift and go to state 89
    ID              shift and go to state 90


state 70

    (55) asignacionNumInit -> ID ASSIGN . expresionMat
    (62) expresionMat -> . valor operadoresMat valor
    (63) expresionMat -> . valor
    (76) valor -> . NUMBER
    (77) valor -> . ID

    NUMBER          shift and go to state 20
    ID              shift and go to state 82

    expresionMat                   shift and go to state 91
    valor                          shift and go to state 92

state 71

    (50) asignacionBoolean -> BOOL ID . ASSIGN expresionBoolean

    ASSIGN          shift and go to state 93


state 72

    (31) sentenciaif -> IF LPAREN . expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (61) expresionComp -> . valor operadoresComp valor
    (76) valor -> . NUMBER
    (77) valor -> . ID

    NUMBER          shift and go to state 20
    ID              shift and go to state 82

    expresionComp                  shift and go to state 94
    valor                          shift and go to state 95

state 73

    (38) sentenciafor -> FOR LPAREN . asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE
    (40) asignacion -> . asignacionNumerica SEMICOLON
    (41) asignacion -> . asignacionString SEMICOLON
    (42) asignacion -> . asignacionBoolean SEMICOLON
    (43) asignacion -> . asignacionEstructuraDatos SEMICOLON
    (51) asignacionNumerica -> . asignacionNum
    (52) asignacionNumerica -> . asignacionNumInit
    (56) asignacionString -> . asignacionStr
    (57) asignacionString -> . asignacionStrInit
    (50) asignacionBoolean -> . BOOL ID ASSIGN expresionBoolean
    (44) asignacionEstructuraDatos -> . asignacionList
    (45) asignacionEstructuraDatos -> . asignacionSet
    (46) asignacionEstructuraDatos -> . asignacionMap
    (53) asignacionNum -> . tipoNumeric ID
    (54) asignacionNumInit -> . tipoNumeric ID ASSIGN expresionMat
    (55) asignacionNumInit -> . ID ASSIGN expresionMat
    (58) asignacionStr -> . tipoString ID
    (59) asignacionStrInit -> . tipoString ID ASSIGN expresionString
    (47) asignacionList -> . LIST LESSTHAN tipoPrimitivo MORETHAN ID
    (48) asignacionSet -> . SET ID ASSIGN NEW SET LPAREN RPAREN
    (49) asignacionMap -> . MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    BOOL            shift and go to state 28
    ID              shift and go to state 97
    LIST            shift and go to state 38
    SET             shift and go to state 39
    MAP             shift and go to state 40
    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    asignacion                     shift and go to state 96
    asignacionNumerica             shift and go to state 11
    asignacionString               shift and go to state 12
    asignacionBoolean              shift and go to state 13
    asignacionEstructuraDatos      shift and go to state 14
    asignacionNum                  shift and go to state 24
    asignacionNumInit              shift and go to state 25
    asignacionStr                  shift and go to state 26
    asignacionStrInit              shift and go to state 27
    asignacionList                 shift and go to state 29
    asignacionSet                  shift and go to state 30
    asignacionMap                  shift and go to state 31
    tipoNumeric                    shift and go to state 36
    tipoString                     shift and go to state 37

state 74

    (39) sentenciawhile -> WHILE LPAREN . expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (61) expresionComp -> . valor operadoresComp valor
    (76) valor -> . NUMBER
    (77) valor -> . ID

    NUMBER          shift and go to state 20
    ID              shift and go to state 82

    expresionComp                  shift and go to state 98
    valor                          shift and go to state 95

state 75

    (19) declararFuncNoArgs -> VOID ID . LPAREN RPAREN LBRACE cuerpoBloque RBRACE
    (14) declararFuncArgs -> VOID ID . LPAREN funcArgumentos RPAREN LBRACE cuerpoBloque RBRACE

    LPAREN          shift and go to state 99


state 76

    (53) asignacionNum -> tipoNumeric ID .
    (54) asignacionNumInit -> tipoNumeric ID . ASSIGN expresionMat

    SEMICOLON       reduce using rule 53 (asignacionNum -> tipoNumeric ID .)
    ASSIGN          shift and go to state 100


state 77

    (58) asignacionStr -> tipoString ID .
    (59) asignacionStrInit -> tipoString ID . ASSIGN expresionString

    SEMICOLON       reduce using rule 58 (asignacionStr -> tipoString ID .)
    ASSIGN          shift and go to state 101


state 78

    (47) asignacionList -> LIST LESSTHAN . tipoPrimitivo MORETHAN ID
    (78) tipoPrimitivo -> . tipoNumeric
    (79) tipoPrimitivo -> . tipoString
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    tipoPrimitivo                  shift and go to state 102
    tipoNumeric                    shift and go to state 103
    tipoString                     shift and go to state 104

state 79

    (48) asignacionSet -> SET ID . ASSIGN NEW SET LPAREN RPAREN

    ASSIGN          shift and go to state 105


state 80

    (49) asignacionMap -> MAP LESSTHAN . tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID
    (78) tipoPrimitivo -> . tipoNumeric
    (79) tipoPrimitivo -> . tipoString
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    tipoPrimitivo                  shift and go to state 106
    tipoNumeric                    shift and go to state 103
    tipoString                     shift and go to state 104

state 81

    (62) expresionMat -> valor operadoresMat valor .

    PRINT           reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    BOOL            reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    NUMBER          reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    ID              reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    IF              reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    FOR             reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    WHILE           reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    VOID            reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    LIST            reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    SET             reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    MAP             reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    NUM             reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    INT             reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    DOUBLE          reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    STRING          reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    VAR             reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    DYNAMIC         reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    $end            reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    SEMICOLON       reduce using rule 62 (expresionMat -> valor operadoresMat valor .)
    RBRACE          reduce using rule 62 (expresionMat -> valor operadoresMat valor .)


state 82

    (77) valor -> ID .

    PRINT           reduce using rule 77 (valor -> ID .)
    BOOL            reduce using rule 77 (valor -> ID .)
    NUMBER          reduce using rule 77 (valor -> ID .)
    ID              reduce using rule 77 (valor -> ID .)
    IF              reduce using rule 77 (valor -> ID .)
    FOR             reduce using rule 77 (valor -> ID .)
    WHILE           reduce using rule 77 (valor -> ID .)
    VOID            reduce using rule 77 (valor -> ID .)
    LIST            reduce using rule 77 (valor -> ID .)
    SET             reduce using rule 77 (valor -> ID .)
    MAP             reduce using rule 77 (valor -> ID .)
    NUM             reduce using rule 77 (valor -> ID .)
    INT             reduce using rule 77 (valor -> ID .)
    DOUBLE          reduce using rule 77 (valor -> ID .)
    STRING          reduce using rule 77 (valor -> ID .)
    VAR             reduce using rule 77 (valor -> ID .)
    DYNAMIC         reduce using rule 77 (valor -> ID .)
    $end            reduce using rule 77 (valor -> ID .)
    SEMICOLON       reduce using rule 77 (valor -> ID .)
    RBRACE          reduce using rule 77 (valor -> ID .)
    RPAREN          reduce using rule 77 (valor -> ID .)
    MINUS           reduce using rule 77 (valor -> ID .)
    PLUS            reduce using rule 77 (valor -> ID .)
    TIMES           reduce using rule 77 (valor -> ID .)
    DIVIDE          reduce using rule 77 (valor -> ID .)
    MORETHAN        reduce using rule 77 (valor -> ID .)
    LESSTHAN        reduce using rule 77 (valor -> ID .)
    GQUAL           reduce using rule 77 (valor -> ID .)
    LQUAL           reduce using rule 77 (valor -> ID .)
    NOTEQUALS       reduce using rule 77 (valor -> ID .)
    EQUALS          reduce using rule 77 (valor -> ID .)


state 83

    (61) expresionComp -> valor operadoresComp valor .

    PRINT           reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    BOOL            reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    NUMBER          reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    ID              reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    IF              reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    FOR             reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    WHILE           reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    VOID            reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    LIST            reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    SET             reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    MAP             reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    NUM             reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    INT             reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    DOUBLE          reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    STRING          reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    VAR             reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    DYNAMIC         reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    $end            reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    RPAREN          reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    RBRACE          reduce using rule 61 (expresionComp -> valor operadoresComp valor .)
    SEMICOLON       reduce using rule 61 (expresionComp -> valor operadoresComp valor .)


state 84

    (29) anidadaelseif -> sentenciaelseif anidadaelseif .

    PRINT           reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    BOOL            reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    NUMBER          reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    ID              reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    IF              reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    FOR             reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    WHILE           reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    VOID            reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    LIST            reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    SET             reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    MAP             reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    NUM             reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    INT             reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    DOUBLE          reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    STRING          reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    VAR             reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    DYNAMIC         reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    $end            reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)
    RBRACE          reduce using rule 29 (anidadaelseif -> sentenciaelseif anidadaelseif .)


state 85

    (30) anidadaelseif -> sentenciaelseif sentenciaelse .

    PRINT           reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    BOOL            reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    NUMBER          reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    ID              reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    IF              reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    FOR             reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    WHILE           reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    VOID            reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    LIST            reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    SET             reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    MAP             reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    NUM             reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    INT             reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    DOUBLE          reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    STRING          reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    VAR             reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    DYNAMIC         reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    $end            reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)
    RBRACE          reduce using rule 30 (anidadaelseif -> sentenciaelseif sentenciaelse .)


state 86

    (33) sentenciaelse -> ELSE LBRACE . cuerpoBloque RBRACE
    (20) cuerpoBloque -> . cuerpo
    (21) cuerpoBloque -> . cuerpo cuerpoBloque
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . expresionMat
    (6) cuerpo -> . expresionComp
    (7) cuerpo -> . sentenciasConditional
    (8) cuerpo -> . sentenciasIterativas
    (9) cuerpo -> . usarFunc
    (40) asignacion -> . asignacionNumerica SEMICOLON
    (41) asignacion -> . asignacionString SEMICOLON
    (42) asignacion -> . asignacionBoolean SEMICOLON
    (43) asignacion -> . asignacionEstructuraDatos SEMICOLON
    (62) expresionMat -> . valor operadoresMat valor
    (63) expresionMat -> . valor
    (61) expresionComp -> . valor operadoresComp valor
    (25) sentenciasConditional -> . sentenciaif
    (26) sentenciasConditional -> . sentenciaif anidadaelseif
    (27) sentenciasConditional -> . sentenciaif sentenciaelse
    (34) sentenciasIterativas -> . sentenciafor
    (35) sentenciasIterativas -> . sentenciawhile
    (22) usarFunc -> . PRINT LPAREN STRINGVAL RPAREN SEMICOLON
    (23) usarFunc -> . PRINT LPAREN NUMBER RPAREN SEMICOLON
    (24) usarFunc -> . PRINT LPAREN ID RPAREN SEMICOLON
    (51) asignacionNumerica -> . asignacionNum
    (52) asignacionNumerica -> . asignacionNumInit
    (56) asignacionString -> . asignacionStr
    (57) asignacionString -> . asignacionStrInit
    (50) asignacionBoolean -> . BOOL ID ASSIGN expresionBoolean
    (44) asignacionEstructuraDatos -> . asignacionList
    (45) asignacionEstructuraDatos -> . asignacionSet
    (46) asignacionEstructuraDatos -> . asignacionMap
    (76) valor -> . NUMBER
    (77) valor -> . ID
    (31) sentenciaif -> . IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (38) sentenciafor -> . FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE
    (39) sentenciawhile -> . WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (53) asignacionNum -> . tipoNumeric ID
    (54) asignacionNumInit -> . tipoNumeric ID ASSIGN expresionMat
    (55) asignacionNumInit -> . ID ASSIGN expresionMat
    (58) asignacionStr -> . tipoString ID
    (59) asignacionStrInit -> . tipoString ID ASSIGN expresionString
    (47) asignacionList -> . LIST LESSTHAN tipoPrimitivo MORETHAN ID
    (48) asignacionSet -> . SET ID ASSIGN NEW SET LPAREN RPAREN
    (49) asignacionMap -> . MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    PRINT           shift and go to state 19
    BOOL            shift and go to state 28
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    LIST            shift and go to state 38
    SET             shift and go to state 39
    MAP             shift and go to state 40
    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    cuerpoBloque                   shift and go to state 107
    cuerpo                         shift and go to state 108
    asignacion                     shift and go to state 4
    expresionMat                   shift and go to state 5
    expresionComp                  shift and go to state 6
    sentenciasConditional          shift and go to state 7
    sentenciasIterativas           shift and go to state 8
    usarFunc                       shift and go to state 9
    asignacionNumerica             shift and go to state 11
    asignacionString               shift and go to state 12
    asignacionBoolean              shift and go to state 13
    asignacionEstructuraDatos      shift and go to state 14
    valor                          shift and go to state 15
    sentenciaif                    shift and go to state 16
    sentenciafor                   shift and go to state 17
    sentenciawhile                 shift and go to state 18
    asignacionNum                  shift and go to state 24
    asignacionNumInit              shift and go to state 25
    asignacionStr                  shift and go to state 26
    asignacionStrInit              shift and go to state 27
    asignacionList                 shift and go to state 29
    asignacionSet                  shift and go to state 30
    asignacionMap                  shift and go to state 31
    tipoNumeric                    shift and go to state 36
    tipoString                     shift and go to state 37

state 87

    (32) sentenciaelseif -> ELSE IF . LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE

    LPAREN          shift and go to state 109


state 88

    (22) usarFunc -> PRINT LPAREN STRINGVAL . RPAREN SEMICOLON

    RPAREN          shift and go to state 110


state 89

    (23) usarFunc -> PRINT LPAREN NUMBER . RPAREN SEMICOLON

    RPAREN          shift and go to state 111


state 90

    (24) usarFunc -> PRINT LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 112


state 91

    (55) asignacionNumInit -> ID ASSIGN expresionMat .

    SEMICOLON       reduce using rule 55 (asignacionNumInit -> ID ASSIGN expresionMat .)


state 92

    (62) expresionMat -> valor . operadoresMat valor
    (63) expresionMat -> valor .
    (66) operadoresMat -> . MINUS
    (67) operadoresMat -> . PLUS
    (68) operadoresMat -> . TIMES
    (69) operadoresMat -> . DIVIDE

    SEMICOLON       reduce using rule 63 (expresionMat -> valor .)
    MINUS           shift and go to state 55
    PLUS            shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

    operadoresMat                  shift and go to state 53

state 93

    (50) asignacionBoolean -> BOOL ID ASSIGN . expresionBoolean
    (64) expresionBoolean -> . TRUE
    (65) expresionBoolean -> . FALSE

    TRUE            shift and go to state 114
    FALSE           shift and go to state 115

    expresionBoolean               shift and go to state 113

state 94

    (31) sentenciaif -> IF LPAREN expresionComp . RPAREN LBRACE cuerpoBloque RBRACE

    RPAREN          shift and go to state 116


state 95

    (61) expresionComp -> valor . operadoresComp valor
    (70) operadoresComp -> . MORETHAN
    (71) operadoresComp -> . LESSTHAN
    (72) operadoresComp -> . GQUAL
    (73) operadoresComp -> . LQUAL
    (74) operadoresComp -> . NOTEQUALS
    (75) operadoresComp -> . EQUALS

    MORETHAN        shift and go to state 59
    LESSTHAN        shift and go to state 60
    GQUAL           shift and go to state 61
    LQUAL           shift and go to state 62
    NOTEQUALS       shift and go to state 63
    EQUALS          shift and go to state 64

    operadoresComp                 shift and go to state 54

state 96

    (38) sentenciafor -> FOR LPAREN asignacion . expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE
    (61) expresionComp -> . valor operadoresComp valor
    (76) valor -> . NUMBER
    (77) valor -> . ID

    NUMBER          shift and go to state 20
    ID              shift and go to state 82

    expresionComp                  shift and go to state 117
    valor                          shift and go to state 95

state 97

    (55) asignacionNumInit -> ID . ASSIGN expresionMat

    ASSIGN          shift and go to state 70


state 98

    (39) sentenciawhile -> WHILE LPAREN expresionComp . RPAREN LBRACE cuerpoBloque RBRACE

    RPAREN          shift and go to state 118


state 99

    (19) declararFuncNoArgs -> VOID ID LPAREN . RPAREN LBRACE cuerpoBloque RBRACE
    (14) declararFuncArgs -> VOID ID LPAREN . funcArgumentos RPAREN LBRACE cuerpoBloque RBRACE
    (15) funcArgumentos -> . argumento
    (16) funcArgumentos -> . argumento COMMA funcArgumentos
    (17) argumento -> . asignacionNum
    (18) argumento -> . asignacionStr
    (53) asignacionNum -> . tipoNumeric ID
    (58) asignacionStr -> . tipoString ID
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    RPAREN          shift and go to state 119
    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    funcArgumentos                 shift and go to state 120
    argumento                      shift and go to state 121
    asignacionNum                  shift and go to state 122
    asignacionStr                  shift and go to state 123
    tipoNumeric                    shift and go to state 124
    tipoString                     shift and go to state 125

state 100

    (54) asignacionNumInit -> tipoNumeric ID ASSIGN . expresionMat
    (62) expresionMat -> . valor operadoresMat valor
    (63) expresionMat -> . valor
    (76) valor -> . NUMBER
    (77) valor -> . ID

    NUMBER          shift and go to state 20
    ID              shift and go to state 82

    expresionMat                   shift and go to state 126
    valor                          shift and go to state 92

state 101

    (59) asignacionStrInit -> tipoString ID ASSIGN . expresionString
    (60) expresionString -> . STRINGVAL

    STRINGVAL       shift and go to state 128

    expresionString                shift and go to state 127

state 102

    (47) asignacionList -> LIST LESSTHAN tipoPrimitivo . MORETHAN ID

    MORETHAN        shift and go to state 129


state 103

    (78) tipoPrimitivo -> tipoNumeric .

    MORETHAN        reduce using rule 78 (tipoPrimitivo -> tipoNumeric .)
    COMMA           reduce using rule 78 (tipoPrimitivo -> tipoNumeric .)


state 104

    (79) tipoPrimitivo -> tipoString .

    MORETHAN        reduce using rule 79 (tipoPrimitivo -> tipoString .)
    COMMA           reduce using rule 79 (tipoPrimitivo -> tipoString .)


state 105

    (48) asignacionSet -> SET ID ASSIGN . NEW SET LPAREN RPAREN

    NEW             shift and go to state 130


state 106

    (49) asignacionMap -> MAP LESSTHAN tipoPrimitivo . COMMA tipoPrimitivo MORETHAN ID

    COMMA           shift and go to state 131


state 107

    (33) sentenciaelse -> ELSE LBRACE cuerpoBloque . RBRACE

    RBRACE          shift and go to state 132


state 108

    (20) cuerpoBloque -> cuerpo .
    (21) cuerpoBloque -> cuerpo . cuerpoBloque
    (20) cuerpoBloque -> . cuerpo
    (21) cuerpoBloque -> . cuerpo cuerpoBloque
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . expresionMat
    (6) cuerpo -> . expresionComp
    (7) cuerpo -> . sentenciasConditional
    (8) cuerpo -> . sentenciasIterativas
    (9) cuerpo -> . usarFunc
    (40) asignacion -> . asignacionNumerica SEMICOLON
    (41) asignacion -> . asignacionString SEMICOLON
    (42) asignacion -> . asignacionBoolean SEMICOLON
    (43) asignacion -> . asignacionEstructuraDatos SEMICOLON
    (62) expresionMat -> . valor operadoresMat valor
    (63) expresionMat -> . valor
    (61) expresionComp -> . valor operadoresComp valor
    (25) sentenciasConditional -> . sentenciaif
    (26) sentenciasConditional -> . sentenciaif anidadaelseif
    (27) sentenciasConditional -> . sentenciaif sentenciaelse
    (34) sentenciasIterativas -> . sentenciafor
    (35) sentenciasIterativas -> . sentenciawhile
    (22) usarFunc -> . PRINT LPAREN STRINGVAL RPAREN SEMICOLON
    (23) usarFunc -> . PRINT LPAREN NUMBER RPAREN SEMICOLON
    (24) usarFunc -> . PRINT LPAREN ID RPAREN SEMICOLON
    (51) asignacionNumerica -> . asignacionNum
    (52) asignacionNumerica -> . asignacionNumInit
    (56) asignacionString -> . asignacionStr
    (57) asignacionString -> . asignacionStrInit
    (50) asignacionBoolean -> . BOOL ID ASSIGN expresionBoolean
    (44) asignacionEstructuraDatos -> . asignacionList
    (45) asignacionEstructuraDatos -> . asignacionSet
    (46) asignacionEstructuraDatos -> . asignacionMap
    (76) valor -> . NUMBER
    (77) valor -> . ID
    (31) sentenciaif -> . IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (38) sentenciafor -> . FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE
    (39) sentenciawhile -> . WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (53) asignacionNum -> . tipoNumeric ID
    (54) asignacionNumInit -> . tipoNumeric ID ASSIGN expresionMat
    (55) asignacionNumInit -> . ID ASSIGN expresionMat
    (58) asignacionStr -> . tipoString ID
    (59) asignacionStrInit -> . tipoString ID ASSIGN expresionString
    (47) asignacionList -> . LIST LESSTHAN tipoPrimitivo MORETHAN ID
    (48) asignacionSet -> . SET ID ASSIGN NEW SET LPAREN RPAREN
    (49) asignacionMap -> . MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    RBRACE          reduce using rule 20 (cuerpoBloque -> cuerpo .)
    PRINT           shift and go to state 19
    BOOL            shift and go to state 28
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    LIST            shift and go to state 38
    SET             shift and go to state 39
    MAP             shift and go to state 40
    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    cuerpo                         shift and go to state 108
    cuerpoBloque                   shift and go to state 133
    asignacion                     shift and go to state 4
    expresionMat                   shift and go to state 5
    expresionComp                  shift and go to state 6
    sentenciasConditional          shift and go to state 7
    sentenciasIterativas           shift and go to state 8
    usarFunc                       shift and go to state 9
    asignacionNumerica             shift and go to state 11
    asignacionString               shift and go to state 12
    asignacionBoolean              shift and go to state 13
    asignacionEstructuraDatos      shift and go to state 14
    valor                          shift and go to state 15
    sentenciaif                    shift and go to state 16
    sentenciafor                   shift and go to state 17
    sentenciawhile                 shift and go to state 18
    asignacionNum                  shift and go to state 24
    asignacionNumInit              shift and go to state 25
    asignacionStr                  shift and go to state 26
    asignacionStrInit              shift and go to state 27
    asignacionList                 shift and go to state 29
    asignacionSet                  shift and go to state 30
    asignacionMap                  shift and go to state 31
    tipoNumeric                    shift and go to state 36
    tipoString                     shift and go to state 37

state 109

    (32) sentenciaelseif -> ELSE IF LPAREN . expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (61) expresionComp -> . valor operadoresComp valor
    (76) valor -> . NUMBER
    (77) valor -> . ID

    NUMBER          shift and go to state 20
    ID              shift and go to state 82

    expresionComp                  shift and go to state 134
    valor                          shift and go to state 95

state 110

    (22) usarFunc -> PRINT LPAREN STRINGVAL RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 135


state 111

    (23) usarFunc -> PRINT LPAREN NUMBER RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 136


state 112

    (24) usarFunc -> PRINT LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 137


state 113

    (50) asignacionBoolean -> BOOL ID ASSIGN expresionBoolean .

    SEMICOLON       reduce using rule 50 (asignacionBoolean -> BOOL ID ASSIGN expresionBoolean .)


state 114

    (64) expresionBoolean -> TRUE .

    SEMICOLON       reduce using rule 64 (expresionBoolean -> TRUE .)


state 115

    (65) expresionBoolean -> FALSE .

    SEMICOLON       reduce using rule 65 (expresionBoolean -> FALSE .)


state 116

    (31) sentenciaif -> IF LPAREN expresionComp RPAREN . LBRACE cuerpoBloque RBRACE

    LBRACE          shift and go to state 138


state 117

    (38) sentenciafor -> FOR LPAREN asignacion expresionComp . SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE

    SEMICOLON       shift and go to state 139


state 118

    (39) sentenciawhile -> WHILE LPAREN expresionComp RPAREN . LBRACE cuerpoBloque RBRACE

    LBRACE          shift and go to state 140


state 119

    (19) declararFuncNoArgs -> VOID ID LPAREN RPAREN . LBRACE cuerpoBloque RBRACE

    LBRACE          shift and go to state 141


state 120

    (14) declararFuncArgs -> VOID ID LPAREN funcArgumentos . RPAREN LBRACE cuerpoBloque RBRACE

    RPAREN          shift and go to state 142


state 121

    (15) funcArgumentos -> argumento .
    (16) funcArgumentos -> argumento . COMMA funcArgumentos

    RPAREN          reduce using rule 15 (funcArgumentos -> argumento .)
    COMMA           shift and go to state 143


state 122

    (17) argumento -> asignacionNum .

    COMMA           reduce using rule 17 (argumento -> asignacionNum .)
    RPAREN          reduce using rule 17 (argumento -> asignacionNum .)


state 123

    (18) argumento -> asignacionStr .

    COMMA           reduce using rule 18 (argumento -> asignacionStr .)
    RPAREN          reduce using rule 18 (argumento -> asignacionStr .)


state 124

    (53) asignacionNum -> tipoNumeric . ID

    ID              shift and go to state 144


state 125

    (58) asignacionStr -> tipoString . ID

    ID              shift and go to state 145


state 126

    (54) asignacionNumInit -> tipoNumeric ID ASSIGN expresionMat .

    SEMICOLON       reduce using rule 54 (asignacionNumInit -> tipoNumeric ID ASSIGN expresionMat .)


state 127

    (59) asignacionStrInit -> tipoString ID ASSIGN expresionString .

    SEMICOLON       reduce using rule 59 (asignacionStrInit -> tipoString ID ASSIGN expresionString .)


state 128

    (60) expresionString -> STRINGVAL .

    SEMICOLON       reduce using rule 60 (expresionString -> STRINGVAL .)


state 129

    (47) asignacionList -> LIST LESSTHAN tipoPrimitivo MORETHAN . ID

    ID              shift and go to state 146


state 130

    (48) asignacionSet -> SET ID ASSIGN NEW . SET LPAREN RPAREN

    SET             shift and go to state 147


state 131

    (49) asignacionMap -> MAP LESSTHAN tipoPrimitivo COMMA . tipoPrimitivo MORETHAN ID
    (78) tipoPrimitivo -> . tipoNumeric
    (79) tipoPrimitivo -> . tipoString
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    tipoPrimitivo                  shift and go to state 148
    tipoNumeric                    shift and go to state 103
    tipoString                     shift and go to state 104

state 132

    (33) sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .

    PRINT           reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    BOOL            reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    NUMBER          reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    ID              reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    IF              reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    FOR             reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    WHILE           reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    VOID            reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    LIST            reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    SET             reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    MAP             reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    NUM             reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    INT             reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    DOUBLE          reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    STRING          reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    VAR             reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    DYNAMIC         reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    $end            reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)
    RBRACE          reduce using rule 33 (sentenciaelse -> ELSE LBRACE cuerpoBloque RBRACE .)


state 133

    (21) cuerpoBloque -> cuerpo cuerpoBloque .

    RBRACE          reduce using rule 21 (cuerpoBloque -> cuerpo cuerpoBloque .)


state 134

    (32) sentenciaelseif -> ELSE IF LPAREN expresionComp . RPAREN LBRACE cuerpoBloque RBRACE

    RPAREN          shift and go to state 149


state 135

    (22) usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .

    PRINT           reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    BOOL            reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    NUMBER          reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    ID              reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    IF              reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    FOR             reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    WHILE           reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    VOID            reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    LIST            reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    SET             reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    MAP             reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    NUM             reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    INT             reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    STRING          reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    VAR             reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    $end            reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)
    RBRACE          reduce using rule 22 (usarFunc -> PRINT LPAREN STRINGVAL RPAREN SEMICOLON .)


state 136

    (23) usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .

    PRINT           reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    BOOL            reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    NUMBER          reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    ID              reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    IF              reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    FOR             reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    WHILE           reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    VOID            reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    LIST            reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    SET             reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    MAP             reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    NUM             reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    INT             reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    STRING          reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    VAR             reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    $end            reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)
    RBRACE          reduce using rule 23 (usarFunc -> PRINT LPAREN NUMBER RPAREN SEMICOLON .)


state 137

    (24) usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .

    PRINT           reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    BOOL            reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    NUMBER          reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    ID              reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    FOR             reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    VOID            reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    LIST            reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    SET             reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    MAP             reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    NUM             reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    INT             reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    STRING          reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    VAR             reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    $end            reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)
    RBRACE          reduce using rule 24 (usarFunc -> PRINT LPAREN ID RPAREN SEMICOLON .)


state 138

    (31) sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE . cuerpoBloque RBRACE
    (20) cuerpoBloque -> . cuerpo
    (21) cuerpoBloque -> . cuerpo cuerpoBloque
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . expresionMat
    (6) cuerpo -> . expresionComp
    (7) cuerpo -> . sentenciasConditional
    (8) cuerpo -> . sentenciasIterativas
    (9) cuerpo -> . usarFunc
    (40) asignacion -> . asignacionNumerica SEMICOLON
    (41) asignacion -> . asignacionString SEMICOLON
    (42) asignacion -> . asignacionBoolean SEMICOLON
    (43) asignacion -> . asignacionEstructuraDatos SEMICOLON
    (62) expresionMat -> . valor operadoresMat valor
    (63) expresionMat -> . valor
    (61) expresionComp -> . valor operadoresComp valor
    (25) sentenciasConditional -> . sentenciaif
    (26) sentenciasConditional -> . sentenciaif anidadaelseif
    (27) sentenciasConditional -> . sentenciaif sentenciaelse
    (34) sentenciasIterativas -> . sentenciafor
    (35) sentenciasIterativas -> . sentenciawhile
    (22) usarFunc -> . PRINT LPAREN STRINGVAL RPAREN SEMICOLON
    (23) usarFunc -> . PRINT LPAREN NUMBER RPAREN SEMICOLON
    (24) usarFunc -> . PRINT LPAREN ID RPAREN SEMICOLON
    (51) asignacionNumerica -> . asignacionNum
    (52) asignacionNumerica -> . asignacionNumInit
    (56) asignacionString -> . asignacionStr
    (57) asignacionString -> . asignacionStrInit
    (50) asignacionBoolean -> . BOOL ID ASSIGN expresionBoolean
    (44) asignacionEstructuraDatos -> . asignacionList
    (45) asignacionEstructuraDatos -> . asignacionSet
    (46) asignacionEstructuraDatos -> . asignacionMap
    (76) valor -> . NUMBER
    (77) valor -> . ID
    (31) sentenciaif -> . IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (38) sentenciafor -> . FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE
    (39) sentenciawhile -> . WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (53) asignacionNum -> . tipoNumeric ID
    (54) asignacionNumInit -> . tipoNumeric ID ASSIGN expresionMat
    (55) asignacionNumInit -> . ID ASSIGN expresionMat
    (58) asignacionStr -> . tipoString ID
    (59) asignacionStrInit -> . tipoString ID ASSIGN expresionString
    (47) asignacionList -> . LIST LESSTHAN tipoPrimitivo MORETHAN ID
    (48) asignacionSet -> . SET ID ASSIGN NEW SET LPAREN RPAREN
    (49) asignacionMap -> . MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    PRINT           shift and go to state 19
    BOOL            shift and go to state 28
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    LIST            shift and go to state 38
    SET             shift and go to state 39
    MAP             shift and go to state 40
    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    expresionComp                  shift and go to state 6
    cuerpoBloque                   shift and go to state 150
    cuerpo                         shift and go to state 108
    asignacion                     shift and go to state 4
    expresionMat                   shift and go to state 5
    sentenciasConditional          shift and go to state 7
    sentenciasIterativas           shift and go to state 8
    usarFunc                       shift and go to state 9
    asignacionNumerica             shift and go to state 11
    asignacionString               shift and go to state 12
    asignacionBoolean              shift and go to state 13
    asignacionEstructuraDatos      shift and go to state 14
    valor                          shift and go to state 15
    sentenciaif                    shift and go to state 16
    sentenciafor                   shift and go to state 17
    sentenciawhile                 shift and go to state 18
    asignacionNum                  shift and go to state 24
    asignacionNumInit              shift and go to state 25
    asignacionStr                  shift and go to state 26
    asignacionStrInit              shift and go to state 27
    asignacionList                 shift and go to state 29
    asignacionSet                  shift and go to state 30
    asignacionMap                  shift and go to state 31
    tipoNumeric                    shift and go to state 36
    tipoString                     shift and go to state 37

state 139

    (38) sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON . incremDecrem RPAREN LBRACE cuerpoBloque RBRACE
    (36) incremDecrem -> . ID PLUS PLUS
    (37) incremDecrem -> . ID MINUS MINUS

    ID              shift and go to state 152

    incremDecrem                   shift and go to state 151

state 140

    (39) sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE . cuerpoBloque RBRACE
    (20) cuerpoBloque -> . cuerpo
    (21) cuerpoBloque -> . cuerpo cuerpoBloque
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . expresionMat
    (6) cuerpo -> . expresionComp
    (7) cuerpo -> . sentenciasConditional
    (8) cuerpo -> . sentenciasIterativas
    (9) cuerpo -> . usarFunc
    (40) asignacion -> . asignacionNumerica SEMICOLON
    (41) asignacion -> . asignacionString SEMICOLON
    (42) asignacion -> . asignacionBoolean SEMICOLON
    (43) asignacion -> . asignacionEstructuraDatos SEMICOLON
    (62) expresionMat -> . valor operadoresMat valor
    (63) expresionMat -> . valor
    (61) expresionComp -> . valor operadoresComp valor
    (25) sentenciasConditional -> . sentenciaif
    (26) sentenciasConditional -> . sentenciaif anidadaelseif
    (27) sentenciasConditional -> . sentenciaif sentenciaelse
    (34) sentenciasIterativas -> . sentenciafor
    (35) sentenciasIterativas -> . sentenciawhile
    (22) usarFunc -> . PRINT LPAREN STRINGVAL RPAREN SEMICOLON
    (23) usarFunc -> . PRINT LPAREN NUMBER RPAREN SEMICOLON
    (24) usarFunc -> . PRINT LPAREN ID RPAREN SEMICOLON
    (51) asignacionNumerica -> . asignacionNum
    (52) asignacionNumerica -> . asignacionNumInit
    (56) asignacionString -> . asignacionStr
    (57) asignacionString -> . asignacionStrInit
    (50) asignacionBoolean -> . BOOL ID ASSIGN expresionBoolean
    (44) asignacionEstructuraDatos -> . asignacionList
    (45) asignacionEstructuraDatos -> . asignacionSet
    (46) asignacionEstructuraDatos -> . asignacionMap
    (76) valor -> . NUMBER
    (77) valor -> . ID
    (31) sentenciaif -> . IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (38) sentenciafor -> . FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE
    (39) sentenciawhile -> . WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (53) asignacionNum -> . tipoNumeric ID
    (54) asignacionNumInit -> . tipoNumeric ID ASSIGN expresionMat
    (55) asignacionNumInit -> . ID ASSIGN expresionMat
    (58) asignacionStr -> . tipoString ID
    (59) asignacionStrInit -> . tipoString ID ASSIGN expresionString
    (47) asignacionList -> . LIST LESSTHAN tipoPrimitivo MORETHAN ID
    (48) asignacionSet -> . SET ID ASSIGN NEW SET LPAREN RPAREN
    (49) asignacionMap -> . MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    PRINT           shift and go to state 19
    BOOL            shift and go to state 28
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    LIST            shift and go to state 38
    SET             shift and go to state 39
    MAP             shift and go to state 40
    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    expresionComp                  shift and go to state 6
    cuerpoBloque                   shift and go to state 153
    cuerpo                         shift and go to state 108
    asignacion                     shift and go to state 4
    expresionMat                   shift and go to state 5
    sentenciasConditional          shift and go to state 7
    sentenciasIterativas           shift and go to state 8
    usarFunc                       shift and go to state 9
    asignacionNumerica             shift and go to state 11
    asignacionString               shift and go to state 12
    asignacionBoolean              shift and go to state 13
    asignacionEstructuraDatos      shift and go to state 14
    valor                          shift and go to state 15
    sentenciaif                    shift and go to state 16
    sentenciafor                   shift and go to state 17
    sentenciawhile                 shift and go to state 18
    asignacionNum                  shift and go to state 24
    asignacionNumInit              shift and go to state 25
    asignacionStr                  shift and go to state 26
    asignacionStrInit              shift and go to state 27
    asignacionList                 shift and go to state 29
    asignacionSet                  shift and go to state 30
    asignacionMap                  shift and go to state 31
    tipoNumeric                    shift and go to state 36
    tipoString                     shift and go to state 37

state 141

    (19) declararFuncNoArgs -> VOID ID LPAREN RPAREN LBRACE . cuerpoBloque RBRACE
    (20) cuerpoBloque -> . cuerpo
    (21) cuerpoBloque -> . cuerpo cuerpoBloque
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . expresionMat
    (6) cuerpo -> . expresionComp
    (7) cuerpo -> . sentenciasConditional
    (8) cuerpo -> . sentenciasIterativas
    (9) cuerpo -> . usarFunc
    (40) asignacion -> . asignacionNumerica SEMICOLON
    (41) asignacion -> . asignacionString SEMICOLON
    (42) asignacion -> . asignacionBoolean SEMICOLON
    (43) asignacion -> . asignacionEstructuraDatos SEMICOLON
    (62) expresionMat -> . valor operadoresMat valor
    (63) expresionMat -> . valor
    (61) expresionComp -> . valor operadoresComp valor
    (25) sentenciasConditional -> . sentenciaif
    (26) sentenciasConditional -> . sentenciaif anidadaelseif
    (27) sentenciasConditional -> . sentenciaif sentenciaelse
    (34) sentenciasIterativas -> . sentenciafor
    (35) sentenciasIterativas -> . sentenciawhile
    (22) usarFunc -> . PRINT LPAREN STRINGVAL RPAREN SEMICOLON
    (23) usarFunc -> . PRINT LPAREN NUMBER RPAREN SEMICOLON
    (24) usarFunc -> . PRINT LPAREN ID RPAREN SEMICOLON
    (51) asignacionNumerica -> . asignacionNum
    (52) asignacionNumerica -> . asignacionNumInit
    (56) asignacionString -> . asignacionStr
    (57) asignacionString -> . asignacionStrInit
    (50) asignacionBoolean -> . BOOL ID ASSIGN expresionBoolean
    (44) asignacionEstructuraDatos -> . asignacionList
    (45) asignacionEstructuraDatos -> . asignacionSet
    (46) asignacionEstructuraDatos -> . asignacionMap
    (76) valor -> . NUMBER
    (77) valor -> . ID
    (31) sentenciaif -> . IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (38) sentenciafor -> . FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE
    (39) sentenciawhile -> . WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (53) asignacionNum -> . tipoNumeric ID
    (54) asignacionNumInit -> . tipoNumeric ID ASSIGN expresionMat
    (55) asignacionNumInit -> . ID ASSIGN expresionMat
    (58) asignacionStr -> . tipoString ID
    (59) asignacionStrInit -> . tipoString ID ASSIGN expresionString
    (47) asignacionList -> . LIST LESSTHAN tipoPrimitivo MORETHAN ID
    (48) asignacionSet -> . SET ID ASSIGN NEW SET LPAREN RPAREN
    (49) asignacionMap -> . MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    PRINT           shift and go to state 19
    BOOL            shift and go to state 28
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    LIST            shift and go to state 38
    SET             shift and go to state 39
    MAP             shift and go to state 40
    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    cuerpoBloque                   shift and go to state 154
    cuerpo                         shift and go to state 108
    asignacion                     shift and go to state 4
    expresionMat                   shift and go to state 5
    expresionComp                  shift and go to state 6
    sentenciasConditional          shift and go to state 7
    sentenciasIterativas           shift and go to state 8
    usarFunc                       shift and go to state 9
    asignacionNumerica             shift and go to state 11
    asignacionString               shift and go to state 12
    asignacionBoolean              shift and go to state 13
    asignacionEstructuraDatos      shift and go to state 14
    valor                          shift and go to state 15
    sentenciaif                    shift and go to state 16
    sentenciafor                   shift and go to state 17
    sentenciawhile                 shift and go to state 18
    asignacionNum                  shift and go to state 24
    asignacionNumInit              shift and go to state 25
    asignacionStr                  shift and go to state 26
    asignacionStrInit              shift and go to state 27
    asignacionList                 shift and go to state 29
    asignacionSet                  shift and go to state 30
    asignacionMap                  shift and go to state 31
    tipoNumeric                    shift and go to state 36
    tipoString                     shift and go to state 37

state 142

    (14) declararFuncArgs -> VOID ID LPAREN funcArgumentos RPAREN . LBRACE cuerpoBloque RBRACE

    LBRACE          shift and go to state 155


state 143

    (16) funcArgumentos -> argumento COMMA . funcArgumentos
    (15) funcArgumentos -> . argumento
    (16) funcArgumentos -> . argumento COMMA funcArgumentos
    (17) argumento -> . asignacionNum
    (18) argumento -> . asignacionStr
    (53) asignacionNum -> . tipoNumeric ID
    (58) asignacionStr -> . tipoString ID
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    argumento                      shift and go to state 121
    funcArgumentos                 shift and go to state 156
    asignacionNum                  shift and go to state 122
    asignacionStr                  shift and go to state 123
    tipoNumeric                    shift and go to state 124
    tipoString                     shift and go to state 125

state 144

    (53) asignacionNum -> tipoNumeric ID .

    COMMA           reduce using rule 53 (asignacionNum -> tipoNumeric ID .)
    RPAREN          reduce using rule 53 (asignacionNum -> tipoNumeric ID .)


state 145

    (58) asignacionStr -> tipoString ID .

    COMMA           reduce using rule 58 (asignacionStr -> tipoString ID .)
    RPAREN          reduce using rule 58 (asignacionStr -> tipoString ID .)


state 146

    (47) asignacionList -> LIST LESSTHAN tipoPrimitivo MORETHAN ID .

    SEMICOLON       reduce using rule 47 (asignacionList -> LIST LESSTHAN tipoPrimitivo MORETHAN ID .)


state 147

    (48) asignacionSet -> SET ID ASSIGN NEW SET . LPAREN RPAREN

    LPAREN          shift and go to state 157


state 148

    (49) asignacionMap -> MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo . MORETHAN ID

    MORETHAN        shift and go to state 158


state 149

    (32) sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN . LBRACE cuerpoBloque RBRACE

    LBRACE          shift and go to state 159


state 150

    (31) sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque . RBRACE

    RBRACE          shift and go to state 160


state 151

    (38) sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem . RPAREN LBRACE cuerpoBloque RBRACE

    RPAREN          shift and go to state 161


state 152

    (36) incremDecrem -> ID . PLUS PLUS
    (37) incremDecrem -> ID . MINUS MINUS

    PLUS            shift and go to state 162
    MINUS           shift and go to state 163


state 153

    (39) sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque . RBRACE

    RBRACE          shift and go to state 164


state 154

    (19) declararFuncNoArgs -> VOID ID LPAREN RPAREN LBRACE cuerpoBloque . RBRACE

    RBRACE          shift and go to state 165


state 155

    (14) declararFuncArgs -> VOID ID LPAREN funcArgumentos RPAREN LBRACE . cuerpoBloque RBRACE
    (20) cuerpoBloque -> . cuerpo
    (21) cuerpoBloque -> . cuerpo cuerpoBloque
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . expresionMat
    (6) cuerpo -> . expresionComp
    (7) cuerpo -> . sentenciasConditional
    (8) cuerpo -> . sentenciasIterativas
    (9) cuerpo -> . usarFunc
    (40) asignacion -> . asignacionNumerica SEMICOLON
    (41) asignacion -> . asignacionString SEMICOLON
    (42) asignacion -> . asignacionBoolean SEMICOLON
    (43) asignacion -> . asignacionEstructuraDatos SEMICOLON
    (62) expresionMat -> . valor operadoresMat valor
    (63) expresionMat -> . valor
    (61) expresionComp -> . valor operadoresComp valor
    (25) sentenciasConditional -> . sentenciaif
    (26) sentenciasConditional -> . sentenciaif anidadaelseif
    (27) sentenciasConditional -> . sentenciaif sentenciaelse
    (34) sentenciasIterativas -> . sentenciafor
    (35) sentenciasIterativas -> . sentenciawhile
    (22) usarFunc -> . PRINT LPAREN STRINGVAL RPAREN SEMICOLON
    (23) usarFunc -> . PRINT LPAREN NUMBER RPAREN SEMICOLON
    (24) usarFunc -> . PRINT LPAREN ID RPAREN SEMICOLON
    (51) asignacionNumerica -> . asignacionNum
    (52) asignacionNumerica -> . asignacionNumInit
    (56) asignacionString -> . asignacionStr
    (57) asignacionString -> . asignacionStrInit
    (50) asignacionBoolean -> . BOOL ID ASSIGN expresionBoolean
    (44) asignacionEstructuraDatos -> . asignacionList
    (45) asignacionEstructuraDatos -> . asignacionSet
    (46) asignacionEstructuraDatos -> . asignacionMap
    (76) valor -> . NUMBER
    (77) valor -> . ID
    (31) sentenciaif -> . IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (38) sentenciafor -> . FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE
    (39) sentenciawhile -> . WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (53) asignacionNum -> . tipoNumeric ID
    (54) asignacionNumInit -> . tipoNumeric ID ASSIGN expresionMat
    (55) asignacionNumInit -> . ID ASSIGN expresionMat
    (58) asignacionStr -> . tipoString ID
    (59) asignacionStrInit -> . tipoString ID ASSIGN expresionString
    (47) asignacionList -> . LIST LESSTHAN tipoPrimitivo MORETHAN ID
    (48) asignacionSet -> . SET ID ASSIGN NEW SET LPAREN RPAREN
    (49) asignacionMap -> . MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    PRINT           shift and go to state 19
    BOOL            shift and go to state 28
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    LIST            shift and go to state 38
    SET             shift and go to state 39
    MAP             shift and go to state 40
    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    cuerpoBloque                   shift and go to state 166
    cuerpo                         shift and go to state 108
    asignacion                     shift and go to state 4
    expresionMat                   shift and go to state 5
    expresionComp                  shift and go to state 6
    sentenciasConditional          shift and go to state 7
    sentenciasIterativas           shift and go to state 8
    usarFunc                       shift and go to state 9
    asignacionNumerica             shift and go to state 11
    asignacionString               shift and go to state 12
    asignacionBoolean              shift and go to state 13
    asignacionEstructuraDatos      shift and go to state 14
    valor                          shift and go to state 15
    sentenciaif                    shift and go to state 16
    sentenciafor                   shift and go to state 17
    sentenciawhile                 shift and go to state 18
    asignacionNum                  shift and go to state 24
    asignacionNumInit              shift and go to state 25
    asignacionStr                  shift and go to state 26
    asignacionStrInit              shift and go to state 27
    asignacionList                 shift and go to state 29
    asignacionSet                  shift and go to state 30
    asignacionMap                  shift and go to state 31
    tipoNumeric                    shift and go to state 36
    tipoString                     shift and go to state 37

state 156

    (16) funcArgumentos -> argumento COMMA funcArgumentos .

    RPAREN          reduce using rule 16 (funcArgumentos -> argumento COMMA funcArgumentos .)


state 157

    (48) asignacionSet -> SET ID ASSIGN NEW SET LPAREN . RPAREN

    RPAREN          shift and go to state 167


state 158

    (49) asignacionMap -> MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN . ID

    ID              shift and go to state 168


state 159

    (32) sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE . cuerpoBloque RBRACE
    (20) cuerpoBloque -> . cuerpo
    (21) cuerpoBloque -> . cuerpo cuerpoBloque
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . expresionMat
    (6) cuerpo -> . expresionComp
    (7) cuerpo -> . sentenciasConditional
    (8) cuerpo -> . sentenciasIterativas
    (9) cuerpo -> . usarFunc
    (40) asignacion -> . asignacionNumerica SEMICOLON
    (41) asignacion -> . asignacionString SEMICOLON
    (42) asignacion -> . asignacionBoolean SEMICOLON
    (43) asignacion -> . asignacionEstructuraDatos SEMICOLON
    (62) expresionMat -> . valor operadoresMat valor
    (63) expresionMat -> . valor
    (61) expresionComp -> . valor operadoresComp valor
    (25) sentenciasConditional -> . sentenciaif
    (26) sentenciasConditional -> . sentenciaif anidadaelseif
    (27) sentenciasConditional -> . sentenciaif sentenciaelse
    (34) sentenciasIterativas -> . sentenciafor
    (35) sentenciasIterativas -> . sentenciawhile
    (22) usarFunc -> . PRINT LPAREN STRINGVAL RPAREN SEMICOLON
    (23) usarFunc -> . PRINT LPAREN NUMBER RPAREN SEMICOLON
    (24) usarFunc -> . PRINT LPAREN ID RPAREN SEMICOLON
    (51) asignacionNumerica -> . asignacionNum
    (52) asignacionNumerica -> . asignacionNumInit
    (56) asignacionString -> . asignacionStr
    (57) asignacionString -> . asignacionStrInit
    (50) asignacionBoolean -> . BOOL ID ASSIGN expresionBoolean
    (44) asignacionEstructuraDatos -> . asignacionList
    (45) asignacionEstructuraDatos -> . asignacionSet
    (46) asignacionEstructuraDatos -> . asignacionMap
    (76) valor -> . NUMBER
    (77) valor -> . ID
    (31) sentenciaif -> . IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (38) sentenciafor -> . FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE
    (39) sentenciawhile -> . WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (53) asignacionNum -> . tipoNumeric ID
    (54) asignacionNumInit -> . tipoNumeric ID ASSIGN expresionMat
    (55) asignacionNumInit -> . ID ASSIGN expresionMat
    (58) asignacionStr -> . tipoString ID
    (59) asignacionStrInit -> . tipoString ID ASSIGN expresionString
    (47) asignacionList -> . LIST LESSTHAN tipoPrimitivo MORETHAN ID
    (48) asignacionSet -> . SET ID ASSIGN NEW SET LPAREN RPAREN
    (49) asignacionMap -> . MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    PRINT           shift and go to state 19
    BOOL            shift and go to state 28
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    LIST            shift and go to state 38
    SET             shift and go to state 39
    MAP             shift and go to state 40
    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    expresionComp                  shift and go to state 6
    cuerpoBloque                   shift and go to state 169
    cuerpo                         shift and go to state 108
    asignacion                     shift and go to state 4
    expresionMat                   shift and go to state 5
    sentenciasConditional          shift and go to state 7
    sentenciasIterativas           shift and go to state 8
    usarFunc                       shift and go to state 9
    asignacionNumerica             shift and go to state 11
    asignacionString               shift and go to state 12
    asignacionBoolean              shift and go to state 13
    asignacionEstructuraDatos      shift and go to state 14
    valor                          shift and go to state 15
    sentenciaif                    shift and go to state 16
    sentenciafor                   shift and go to state 17
    sentenciawhile                 shift and go to state 18
    asignacionNum                  shift and go to state 24
    asignacionNumInit              shift and go to state 25
    asignacionStr                  shift and go to state 26
    asignacionStrInit              shift and go to state 27
    asignacionList                 shift and go to state 29
    asignacionSet                  shift and go to state 30
    asignacionMap                  shift and go to state 31
    tipoNumeric                    shift and go to state 36
    tipoString                     shift and go to state 37

state 160

    (31) sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .

    ELSE            reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    PRINT           reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    BOOL            reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    NUMBER          reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    ID              reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    IF              reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    FOR             reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    WHILE           reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    VOID            reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    LIST            reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    SET             reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    MAP             reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    NUM             reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    INT             reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    DOUBLE          reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    STRING          reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    VAR             reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    DYNAMIC         reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    $end            reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    RBRACE          reduce using rule 31 (sentenciaif -> IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)


state 161

    (38) sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN . LBRACE cuerpoBloque RBRACE

    LBRACE          shift and go to state 170


state 162

    (36) incremDecrem -> ID PLUS . PLUS

    PLUS            shift and go to state 171


state 163

    (37) incremDecrem -> ID MINUS . MINUS

    MINUS           shift and go to state 172


state 164

    (39) sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .

    PRINT           reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    BOOL            reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    NUMBER          reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    ID              reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    IF              reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    FOR             reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    WHILE           reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    VOID            reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    LIST            reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    SET             reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    MAP             reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    NUM             reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    INT             reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    DOUBLE          reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    STRING          reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    VAR             reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    DYNAMIC         reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    $end            reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    RBRACE          reduce using rule 39 (sentenciawhile -> WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)


state 165

    (19) declararFuncNoArgs -> VOID ID LPAREN RPAREN LBRACE cuerpoBloque RBRACE .

    VOID            reduce using rule 19 (declararFuncNoArgs -> VOID ID LPAREN RPAREN LBRACE cuerpoBloque RBRACE .)
    $end            reduce using rule 19 (declararFuncNoArgs -> VOID ID LPAREN RPAREN LBRACE cuerpoBloque RBRACE .)


state 166

    (14) declararFuncArgs -> VOID ID LPAREN funcArgumentos RPAREN LBRACE cuerpoBloque . RBRACE

    RBRACE          shift and go to state 173


state 167

    (48) asignacionSet -> SET ID ASSIGN NEW SET LPAREN RPAREN .

    SEMICOLON       reduce using rule 48 (asignacionSet -> SET ID ASSIGN NEW SET LPAREN RPAREN .)


state 168

    (49) asignacionMap -> MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID .

    SEMICOLON       reduce using rule 49 (asignacionMap -> MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID .)


state 169

    (32) sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque . RBRACE

    RBRACE          shift and go to state 174


state 170

    (38) sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE . cuerpoBloque RBRACE
    (20) cuerpoBloque -> . cuerpo
    (21) cuerpoBloque -> . cuerpo cuerpoBloque
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . expresionMat
    (6) cuerpo -> . expresionComp
    (7) cuerpo -> . sentenciasConditional
    (8) cuerpo -> . sentenciasIterativas
    (9) cuerpo -> . usarFunc
    (40) asignacion -> . asignacionNumerica SEMICOLON
    (41) asignacion -> . asignacionString SEMICOLON
    (42) asignacion -> . asignacionBoolean SEMICOLON
    (43) asignacion -> . asignacionEstructuraDatos SEMICOLON
    (62) expresionMat -> . valor operadoresMat valor
    (63) expresionMat -> . valor
    (61) expresionComp -> . valor operadoresComp valor
    (25) sentenciasConditional -> . sentenciaif
    (26) sentenciasConditional -> . sentenciaif anidadaelseif
    (27) sentenciasConditional -> . sentenciaif sentenciaelse
    (34) sentenciasIterativas -> . sentenciafor
    (35) sentenciasIterativas -> . sentenciawhile
    (22) usarFunc -> . PRINT LPAREN STRINGVAL RPAREN SEMICOLON
    (23) usarFunc -> . PRINT LPAREN NUMBER RPAREN SEMICOLON
    (24) usarFunc -> . PRINT LPAREN ID RPAREN SEMICOLON
    (51) asignacionNumerica -> . asignacionNum
    (52) asignacionNumerica -> . asignacionNumInit
    (56) asignacionString -> . asignacionStr
    (57) asignacionString -> . asignacionStrInit
    (50) asignacionBoolean -> . BOOL ID ASSIGN expresionBoolean
    (44) asignacionEstructuraDatos -> . asignacionList
    (45) asignacionEstructuraDatos -> . asignacionSet
    (46) asignacionEstructuraDatos -> . asignacionMap
    (76) valor -> . NUMBER
    (77) valor -> . ID
    (31) sentenciaif -> . IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (38) sentenciafor -> . FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE
    (39) sentenciawhile -> . WHILE LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE
    (53) asignacionNum -> . tipoNumeric ID
    (54) asignacionNumInit -> . tipoNumeric ID ASSIGN expresionMat
    (55) asignacionNumInit -> . ID ASSIGN expresionMat
    (58) asignacionStr -> . tipoString ID
    (59) asignacionStrInit -> . tipoString ID ASSIGN expresionString
    (47) asignacionList -> . LIST LESSTHAN tipoPrimitivo MORETHAN ID
    (48) asignacionSet -> . SET ID ASSIGN NEW SET LPAREN RPAREN
    (49) asignacionMap -> . MAP LESSTHAN tipoPrimitivo COMMA tipoPrimitivo MORETHAN ID
    (80) tipoNumeric -> . NUM
    (81) tipoNumeric -> . INT
    (82) tipoNumeric -> . DOUBLE
    (83) tipoString -> . STRING
    (84) tipoString -> . VAR
    (85) tipoString -> . DYNAMIC

    PRINT           shift and go to state 19
    BOOL            shift and go to state 28
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    LIST            shift and go to state 38
    SET             shift and go to state 39
    MAP             shift and go to state 40
    NUM             shift and go to state 41
    INT             shift and go to state 42
    DOUBLE          shift and go to state 43
    STRING          shift and go to state 44
    VAR             shift and go to state 45
    DYNAMIC         shift and go to state 46

    asignacion                     shift and go to state 4
    expresionComp                  shift and go to state 6
    cuerpoBloque                   shift and go to state 175
    cuerpo                         shift and go to state 108
    expresionMat                   shift and go to state 5
    sentenciasConditional          shift and go to state 7
    sentenciasIterativas           shift and go to state 8
    usarFunc                       shift and go to state 9
    asignacionNumerica             shift and go to state 11
    asignacionString               shift and go to state 12
    asignacionBoolean              shift and go to state 13
    asignacionEstructuraDatos      shift and go to state 14
    valor                          shift and go to state 15
    sentenciaif                    shift and go to state 16
    sentenciafor                   shift and go to state 17
    sentenciawhile                 shift and go to state 18
    asignacionNum                  shift and go to state 24
    asignacionNumInit              shift and go to state 25
    asignacionStr                  shift and go to state 26
    asignacionStrInit              shift and go to state 27
    asignacionList                 shift and go to state 29
    asignacionSet                  shift and go to state 30
    asignacionMap                  shift and go to state 31
    tipoNumeric                    shift and go to state 36
    tipoString                     shift and go to state 37

state 171

    (36) incremDecrem -> ID PLUS PLUS .

    RPAREN          reduce using rule 36 (incremDecrem -> ID PLUS PLUS .)


state 172

    (37) incremDecrem -> ID MINUS MINUS .

    RPAREN          reduce using rule 37 (incremDecrem -> ID MINUS MINUS .)


state 173

    (14) declararFuncArgs -> VOID ID LPAREN funcArgumentos RPAREN LBRACE cuerpoBloque RBRACE .

    VOID            reduce using rule 14 (declararFuncArgs -> VOID ID LPAREN funcArgumentos RPAREN LBRACE cuerpoBloque RBRACE .)
    $end            reduce using rule 14 (declararFuncArgs -> VOID ID LPAREN funcArgumentos RPAREN LBRACE cuerpoBloque RBRACE .)


state 174

    (32) sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .

    ELSE            reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    PRINT           reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    BOOL            reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    NUMBER          reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    ID              reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    IF              reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    FOR             reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    WHILE           reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    VOID            reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    LIST            reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    SET             reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    MAP             reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    NUM             reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    INT             reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    DOUBLE          reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    STRING          reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    VAR             reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    DYNAMIC         reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    $end            reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)
    RBRACE          reduce using rule 32 (sentenciaelseif -> ELSE IF LPAREN expresionComp RPAREN LBRACE cuerpoBloque RBRACE .)


state 175

    (38) sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque . RBRACE

    RBRACE          shift and go to state 176


state 176

    (38) sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .

    PRINT           reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    BOOL            reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    NUMBER          reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    ID              reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    IF              reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    FOR             reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    WHILE           reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    VOID            reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    LIST            reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    SET             reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    MAP             reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    NUM             reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    INT             reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    DOUBLE          reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    STRING          reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    VAR             reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    DYNAMIC         reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    $end            reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)
    RBRACE          reduce using rule 38 (sentenciafor -> FOR LPAREN asignacion expresionComp SEMICOLON incremDecrem RPAREN LBRACE cuerpoBloque RBRACE .)

